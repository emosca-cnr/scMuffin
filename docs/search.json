[{"path":"/articles/scMuffin.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"scMuffin package vignettes","text":"scMuffin requires R >= 4.0.0, due dependencies, like Seurat (Hao et al. 2021). R can installed CRAN URL https://cran.r-project.org/index.html. succesfully install scMuffin need packages Bioconductor (https://bioconductor.org) github (https://github.com/). packages can installed using following commands: dependencies, missing, automatically installed using following command: load package:","code":"if (!require(\"BiocManager\", quietly = TRUE)){   install.packages(\"BiocManager\") } BiocManager::install(c(\"BiocStyle\", \"ComplexHeatmap\", \"DESeq2\", \"org.Hs.eg.db\"))  if (!require(\"devtools\", quietly = TRUE)){   install.packages(\"devtools\") } devtools::install_github(\"theislab/destiny\") devtools::install_github(\"emosca-cnr/scMuffin\", build_vignettes = TRUE) library(scMuffin)"},{"path":"/articles/scMuffin.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"scMuffin package vignettes","text":"scMuffin intended used downstream general purpose tasks like quality control, normalization, cell clustering dataset integration, dedicated tools, Seurat (Hao et al. 2021). scMuffin requires three inputs: genes--cells raw counts matrix; genes--cells normalized expression matrix; partition cells (cell clusters). rownames colnames two matrices must , respectively, gene identifiers cell identifiers. Currently, recommend use official gene symbols. analysis, like CNV inference, works gene symbols. Typically, two genes--cells matrices already filtered exclude low quality cells genes negatively affect analyses. However, characterization cells can achieved scMuffin offers insights can used () filter dataset /decide cells apply particular analyses (e.g. biomarker identification). general, according research questions experimental design strong mild filters applied using scMuffin.","code":""},{"path":"/articles/scMuffin.html","id":"obtaining-the-data-used-in-this-vignette","dir":"Articles","previous_headings":"","what":"Obtaining the data used in this vignette","title":"scMuffin package vignettes","text":"’s example obtain publicly available single cell dataset Gene Expression Omnibus (GEO). particular, consider sample study High-Grade Glioma (J. Yuan et al. 2018) (GSE103224): download filtered genes--cells mtrices URLs: sample PJ016: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM2758471; read text files R use Seurat package (Hao et al. 2021) perform series typical tasks (e.g. normalization, clustering); ’s concise example using sample PJ016: genes--cells count matrix available NCBI GEO provided Ensembl identifiers gene symbols, unique. , read table, used function keep_strongest_representative, defines genes--cells matrix symbols row names. case multiple Ensembl ids mapped symbol, row highest average count kept representative gene. real scenario, functions listed run using appropriate parameter values take account specificities dataset consideration objectives analysis perform. just wanted provide means obtain dataset follow vignette. Please read Seurat documentation details functions listed .","code":"library(Seurat) gbc_counts <- read.table(\"GSM2758471_PJ016.filtered.matrix.txt\", stringsAsFactors = F) sym <- gbc_counts[, \"V2\"] gbc_counts[, c(\"V1\", \"V2\")] <- NULL gbc_counts <- keep_strongest_representative(genes_by_cells = gbc_counts, sym)      seu_obj_1 <- CreateSeuratObject(counts = gbc_counts, project = \"PJ016\",                                 min.cells = 100, min.features = 1000) seu_obj_1[[\"pMito\"]] <- PercentageFeatureSet(seu_obj_1, pattern = \"^MT-\") seu_obj_1 <-  subset(seu_obj_1,  subset = nFeature_RNA > 200 &                        nFeature_RNA < 8000 & nCount_RNA < 30000 & pMito < 10)  seu_obj_1 <- NormalizeData(seu_obj_1) seu_obj_1 <- FindVariableFeatures(seu_obj_1, selection.method = \"vst\",                                   nfeatures = 2000) seu_obj_1 <- ScaleData(seu_obj_1, features = rownames(seu_obj_1)) seu_obj_1 <- RunPCA(seu_obj_1, npcs = 10,                     features = VariableFeatures(seu_obj_1)) seu_obj_1 <- FindNeighbors(seu_obj_1, dims = 1:10) seu_obj_1 <- FindClusters(seu_obj_1) seu_obj_1 <- RunUMAP(seu_obj_1, dims = 1:10) seu_obj_1 <- CellCycleScoring(object = seu_obj_1,                               g2m.features = cc.genes.updated.2019$g2m.genes,                               s.features = cc.genes.updated.2019$s.genes)"},{"path":"/articles/scMuffin.html","id":"the-scmuffinlist-data-structure","dir":"Articles","previous_headings":"","what":"The scMuffinList data structure","title":"scMuffin package vignettes","text":"data results scMuffin stored scMuffinList, every function takes input structure returns modified version . scMuffinList can created follows: Many analyses require cell clusters. partition can added follows: seu_obj_1$seurat_clusters named vector contains cells clusters whose names cell labels. element partitions scML contain cell clusters: function add_features() can used add custom results scMuffinList. following example add cell cycle phase: summary element scMuffinList data.frame intended contain data feature, element full can used store supporting feature data (see examples ).","code":"scML <- create_scMuffinList(counts = GetAssayData(seu_obj_1, assay = \"RNA\", slot = \"counts\"),                              normalized = GetAssayData(seu_obj_1, assay = \"RNA\", slot = \"data\")) scML <- add_partitions(scML,                         clusters = seu_obj_1$seurat_clusters,                         partition_id = \"global_expr\") head(scML$partitions[, 1, drop = F]) ##    global_expr ## V3           2 ## V4           2 ## V5           6 ## V6           2 ## V7           6 ## V8           6 scML <- add_features(scML, name = \"CC_Phase\",                       summary = cbind(CC_Phase = seu_obj_1$Phase)) head(scML$CC_Phase$summary) ##    CC_Phase ## V3 \"G2M\"    ## V4 \"S\"      ## V5 \"G1\"     ## V6 \"G2M\"    ## V7 \"G1\"     ## V8 \"G1\""},{"path":"/articles/scMuffin.html","id":"gene-set-scoring","dir":"Articles","previous_headings":"","what":"Gene set scoring","title":"scMuffin package vignettes","text":"scMuffin provides functions set one collections gene sets perform cell-level estimation gene set expression relation empirical null model. can applied gene set can therefore used estimate various cells’ phenotypes, like pathway activities markers expression.","code":""},{"path":"/articles/scMuffin.html","id":"assembling-input-gene-sets","dir":"Articles","previous_headings":"Gene set scoring","what":"Assembling input gene sets","title":"scMuffin package vignettes","text":"function prepare_gsls retrieves gene sets CellMarker (Zhang et al. 2019), PanglaoDB (Franzén, Gan, Björkegren 2019), CancerSEA (H. Yuan et al. 2019) MSigDB (Subramanian et al. 2005), accepts custom gene set well. full list gene sets available whitin CellMarker, PanglaoDB CancerSEA collections can listed using: case MSigDB can use dedicated functions: gene sets interest can selected acting corresponding arguments CM_tissues, PNDB_tissues, msigdb_hs_cat_subcat. case CellMarker PanglaoDB can specify list desired tissues. full set can listed means show_tissues. show just first part output: example: Note case MSigDB set data.frame specify species, category sub_category gene set collections.","code":"data(\"gsls_EntrezID\") data(\"gsls_Symbol\") msigdbr::msigdbr_collections() msigdbr::msigdbr_species() lapply(show_tissues(), head) ## $PNDB ## [1] \"Adrenal_glands\"    \"Blood\"             \"Bone\"              ## [4] \"Brain\"             \"Connective_tissue\" \"Embryo\"            ##  ## $CM_normal ## [1] \"Abdominal_adipose_tissue\" \"Adipose_tissue\"           ## [3] \"Adrenal_gland\"            \"Adventitia\"               ## [5] \"Airway_epithelium\"        \"Amniotic_fluid\"           ##  ## $CM_cancer ## [1] \"Adipose_tissue\" \"Ascites\"        \"Bladder\"        \"Blood\"          ## [5] \"Blood_vessel\"   \"Bone\" gsc <- prepare_gsls(gs_sources = c(\"CancerSEA\", \"PNDB\"),                      PNDB_tissues = c(\"Brain\"),                      scMuffinList = scML,                      genes_min = 3)"},{"path":"/articles/scMuffin.html","id":"calculate-gene-set-scores-at-cell-and-cluster-level","dir":"Articles","previous_headings":"Gene set scoring","what":"Calculate Gene set scores at cell and cluster level","title":"scMuffin package vignettes","text":"following example, estimate scores CancerSEA gene sets: results analysis stored elements scML. gene set scoring engine stores results scML$gene_set_scoring, summary cells--features data.frame cell scores, full contains series additional details every gene set: values cell-level scores can used color UMAP visualizations, automatically generated every gene set using: , example UMAP visualization cells colored CancerSEA “Hypoxia” gene set score. caption function calculate_gs_scores_in_clusters defines median values gene set scores every cluster given partition id: mean values useful obtain concise visualization gene set expression throughout dataset, using function plot_heatmap_features_by_clusters: caption","code":"scML <- calculate_gs_scores(scMuffinList = scML,                              gs_list = gsc$CancerSEA) head(scML$gene_set_scoring$summary) head(scML$gene_set_scoring$full$Angiogenesis) ##    Angiogenesis    Apoptosis  Cell_Cycle Differentiation DNA_damage ## V3  -0.10918589 -0.027672315  0.14448128       0.2177449 0.10625520 ## V4  -0.02872848  0.065879018  0.28261124       0.2546351 0.28273733 ## V5   0.08863655 -0.003487231 -0.04785548       0.1568680 0.14740373 ## V6  -0.10802785 -0.010414814  0.36535484       0.2201350 0.16137969 ## V7   0.09552221  0.214845193 -0.13056901       0.1659778 0.01677083 ## V8   0.14137853  0.267301590 -0.10286473       0.1054560 0.09103363 ##      DNA_repair        EMT     Hypoxia Inflammation  Invasion Metastasis ## V3  0.148348585 0.05265334  0.09262748  0.009633798 0.3169777  0.2093022 ## V4  0.181192508 0.13265908  0.12957070  0.050349840 0.5034789  0.2555932 ## V5 -0.011344590 0.22409580  0.41523704  0.111271235 0.2040137  0.3528524 ## V6  0.163828298 0.26049885 -0.03046142  0.005814202 0.5683223  0.1564824 ## V7 -0.071774957 0.35638003  0.39819922  0.004184621 0.3586581  0.3512004 ## V8  0.001900824 0.23221609  0.32485036 -0.015495107 0.2552769  0.4519555 ##    Proliferation  Quiescence  Stemness ## V3    0.19624494 -0.10718702 0.4275265 ## V4    0.31782667  0.14023972 0.6338283 ## V5    0.13657056  0.00557050 0.2942666 ## V6    0.16174960  0.06201775 0.5979552 ## V7    0.17320576  0.03903302 0.2387523 ## V8   -0.03581073  0.07383093 0.2218311 ##         case case.N case.AV nmark_min avg_control control.AV null_ok ## V3 0.6209460     40      21      TRUE   0.7301319        100    TRUE ## V4 0.7282336     40      20      TRUE   0.7569621        100    TRUE ## V5 0.8418314     40      23      TRUE   0.7531949        100    TRUE ## V6 0.6632416     40      16      TRUE   0.7712694        100    TRUE ## V7 0.8363020     40      23      TRUE   0.7407798        100    TRUE ## V8 0.8964932     40      19      TRUE   0.7551147        100    TRUE ##    avg_delta_score delta_score ## V3     -0.10918589 -0.10918589 ## V4     -0.02872848 -0.02872848 ## V5      0.08863655  0.08863655 ## V6     -0.10802785 -0.10802785 ## V7      0.09552221  0.09552221 ## V8      0.14137853  0.14137853 plot_umap_colored_features(scMuffinList = scML,                             Seu_obj = seu_obj_1,                             feature_name = \"gene_set_scoring\") scML <- calculate_gs_scores_in_clusters(scMuffinList = scML,                                          partition_id = \"global_expr\") scML$cluster_data$global_expr$gene_set_scoring$summary ##   Angiogenesis    Apoptosis  Cell_Cycle Differentiation DNA_damage   DNA_repair ## 0  0.005206236  0.019249002 -0.06447346      0.10079093 0.08386659 -0.015634375 ## 1  0.022524297  0.052477813 -0.02173267      0.16058731 0.15353017 -0.016262480 ## 2  0.016285304 -0.077046033  0.09287226      0.16931117 0.14490958  0.104084184 ## 3 -0.011020301 -0.004544935 -0.06073645      0.09458853 0.11932908 -0.001509004 ## 4  0.022337656  0.021403192 -0.04759109      0.14014722 0.12942893 -0.024110561 ## 5 -0.031611017 -0.042869916  0.02839297      0.15244780 0.22201017  0.067711722 ## 6  0.132965431  0.028446423 -0.05078115      0.17077833 0.11716633 -0.035208636 ## 7  0.083809559 -0.027496365  0.01100746      0.15875134 0.20662126  0.027456269 ## 8  0.009743315 -0.072038549  0.28456623      0.24816174 0.16453499  0.118506158 ##         EMT      Hypoxia Inflammation   Invasion Metastasis Proliferation ## 0 0.1958425  0.152775367  0.007683201 0.02659866 0.24715672    0.01822001 ## 1 0.2445520  0.300890417  0.129862284 0.15558955 0.31501115    0.02251154 ## 2 0.1556018 -0.011922956 -0.003003220 0.38545997 0.10925866    0.16892359 ## 3 0.2323454  0.267548254  0.086860333 0.09265066 0.24611511    0.12064441 ## 4 0.2101481  0.262389267  0.056573420 0.17563272 0.29081642    0.03197286 ## 5 0.1895798 -0.046625305  0.028563842 0.20228425 0.06788279    0.03974853 ## 6 0.3314966  0.287708428  0.080396645 0.20701318 0.37491821   -0.02531225 ## 7 0.1290949 -0.044477324 -0.003007760 0.19486268 0.10988028    0.05104020 ## 8 0.1226556  0.004651646  0.035257815 0.49988275 0.14005943    0.39134694 ##     Quiescence  Stemness ## 0 -0.014092199 0.2370518 ## 1  0.086151276 0.2942516 ## 2  0.029009746 0.3854771 ## 3  0.148241530 0.3829096 ## 4 -0.003897101 0.2378097 ## 5 -0.054270405 0.3662737 ## 6  0.073751645 0.2388921 ## 7  0.040777466 0.4215733 ## 8  0.006650415 0.4348696 plot_heatmap_features_by_clusters(scMuffinList = scML,                                    feature_source = \"gss\")"},{"path":[]},{"path":"/articles/scMuffin.html","id":"cnv-calculation","dir":"Articles","previous_headings":"CNV inference","what":"CNV calculation","title":"scMuffin package vignettes","text":"CNV inference performed function CNV_analysis. results stored scML$CNV, : summary contains CNV score; scML$CNV$full$CNV contains regions--cells matrix CNV profiles; scML$CNV$full$regions2genes important map original data CNV regions; scML$CNV$full$detected_cnv_regions data.frame list CNV regions detected chromosome cell cluster: Importantly, CNV inference adds “CNV” partition: calculation can demanding. example, requires approximately 10 minutes 2 cores (dual Intel(R) Xeon(R), 2.60GHz).","code":"scML <- CNV_analysis(scML) head(scML$CNV$summary) head(scML$CNV$full$CNV) head(scML$CNV$full$regions2genes) head(scML$CNV$full$detected_cnv_regions$chr1) ##    CNV_score ## V3  42.61237 ## V4  49.29867 ## V5  40.00239 ## V6  45.42658 ## V7  37.62340 ## V8  45.69161 ##                                                            V3         V4 ## chr1__826205__LINC00115__chr1__15807161__UQCRHL   -0.09701447 -0.1335597 ## chr1__827590__LINC01128__chr1__15834214__FLJ37453 -0.09701447 -0.1335597 ## chr1__923922__SAMD11__chr1__15847706__SPEN        -0.10029463 -0.1368559 ## chr1__944202__NOC2L__chr1__15941868__ZBTB17       -0.10029463 -0.1291166 ## chr1__998963__HES4__chr1__16246839__FBXO42        -0.10357480 -0.1233517 ## chr1__1013496__ISG15__chr1__16367241__SZRD1       -0.10357480 -0.1208830 ##                                                            V5          V6 ## chr1__826205__LINC00115__chr1__15807161__UQCRHL   -0.08801707 -0.08020141 ## chr1__827590__LINC01128__chr1__15834214__FLJ37453 -0.08801707 -0.08020141 ## chr1__923922__SAMD11__chr1__15847706__SPEN        -0.08801707 -0.08020141 ## chr1__944202__NOC2L__chr1__15941868__ZBTB17       -0.08801707 -0.07690028 ## chr1__998963__HES4__chr1__16246839__FBXO42        -0.08801707 -0.08267282 ## chr1__1013496__ISG15__chr1__16367241__SZRD1       -0.08801707 -0.07937168 ##                                                            V7         V8 ## chr1__826205__LINC00115__chr1__15807161__UQCRHL   -0.09343743 -0.1312566 ## chr1__827590__LINC01128__chr1__15834214__FLJ37453 -0.09013095 -0.1312566 ## chr1__923922__SAMD11__chr1__15847706__SPEN        -0.09013095 -0.1254576 ## chr1__944202__NOC2L__chr1__15941868__ZBTB17       -0.09013095 -0.1221395 ## chr1__998963__HES4__chr1__16246839__FBXO42        -0.09343743 -0.1188214 ## chr1__1013496__ISG15__chr1__16367241__SZRD1       -0.09343743 -0.1155033 ##                                                           V9        V10 ## chr1__826205__LINC00115__chr1__15807161__UQCRHL   -0.1363821 -0.1140620 ## chr1__827590__LINC01128__chr1__15834214__FLJ37453 -0.1397023 -0.1140620 ## chr1__923922__SAMD11__chr1__15847706__SPEN        -0.1363821 -0.1106926 ## chr1__944202__NOC2L__chr1__15941868__ZBTB17       -0.1363821 -0.1140620 ## chr1__998963__HES4__chr1__16246839__FBXO42        -0.1363821 -0.1140620 ## chr1__1013496__ISG15__chr1__16367241__SZRD1       -0.1363821 -0.1106926 ##                                                          V11         V12 ## chr1__826205__LINC00115__chr1__15807161__UQCRHL   0.03868385 -0.08410502 ## chr1__827590__LINC01128__chr1__15834214__FLJ37453 0.04206464 -0.08410502 ## chr1__923922__SAMD11__chr1__15847706__SPEN        0.04796102 -0.08410502 ## chr1__944202__NOC2L__chr1__15941868__ZBTB17       0.05385741 -0.08067802 ## chr1__998963__HES4__chr1__16246839__FBXO42        0.05637300 -0.08067802 ## chr1__1013496__ISG15__chr1__16367241__SZRD1       0.05975379 -0.07471005 ## $chr1__826205__LINC00115__chr1__15807161__UQCRHL ##         chr      pos    symbol ## X11.1  chr1   826205 LINC00115 ## X12.1  chr1   827590 LINC01128 ## X13.1  chr1   923922    SAMD11 ## X14.1  chr1   944202     NOC2L ## X15.1  chr1   998963      HES4 ## X16.1  chr1  1013496     ISG15 ## X17.1  chr1  1216930      SDF4 ## X18.1  chr1  1232236   B3GALT6 ## X19.1  chr1  1253911    UBE2J2 ## X110.1 chr1  1280435    SCNN1D ## X111.1 chr1  1292390     ACAP3 ## X112.1 chr1  1308579     PUSL1 ## X113.1 chr1  1324801      CPTP ## X114.1 chr1  1335277      DVL1 ## X115.1 chr1  1352688     MXRA8 ## X116.1 chr1  1373735  AURKAIP1 ## X117.1 chr1  1385710     CCNL2 ## X118.1 chr1  1401908    MRPL20 ## X119.1 chr1  1449688    ATAD3C ## X120.1 chr1  1471764    ATAD3B ## X121.1 chr1  1512161    ATAD3A ## X122.1 chr1  1534777   TMEM240 ## X123.1 chr1  1541672     SSU72 ## X124.1 chr1  1615854      MIB2 ## X125.1 chr1  1635224    CDK11B ## X126.1 chr1  1661477  SLC35E2B ## X127.1 chr1  1751231      NADK ## X128.1 chr1  1785284      GNB1 ## X129.1 chr1  2189548    FAAP20 ## X130.1 chr1  2228318       SKI ## X131.1 chr1  2391840      RER1 ## X132.1 chr1  2403973     PEX10 ## X133.1 chr1  2508536     PANK4 ## X134.1 chr1  2528744      HES5 ## X135.1 chr1  2556364  TNFRSF14 ## X136.1 chr1  3625014    TPRG1L ## X137.1 chr1  3630769    WRAP73 ## X138.1 chr1  3778558    LRRC47 ## X139.1 chr1  3812085    CEP104 ## X140.1 chr1  3889132  C1orf174 ## X141.1 chr1  6185019     RPL22 ## X142.1 chr1  6221192      ICMT ## X143.1 chr1  6247352    GPR153 ## X144.1 chr1  6264271     ACOT7 ## X145.1 chr1  6460785  TNFRSF25 ## X146.1 chr1  6467121   PLEKHG5 ## X147.1 chr1  6521346      NOL9 ## X148.1 chr1  6579993    ZBTB48 ## X149.1 chr1  6590723    KLHL21 ## X150.1 chr1  6613730     PHF13 ## X151.1 chr1  6625149     THAP3 ## X152.1 chr1  6634169   DNAJC11 ## X153.1 chr1  6785453    CAMTA1 ## X154.1 chr1  7771295     VAMP3 ## X155.1 chr1  7784428      PER3 ## X156.1 chr1  7961710     PARK7 ## X157.1 chr1  8011726    ERRFI1 ## X158.1 chr1  8352403      RERE ## X159.1 chr1  8860999      ENO1 ## X160.1 chr1  9148010  MIR34AHG ## X161.1 chr1  9234773      H6PD ## X162.1 chr1  9292893     SPSB1 ## X163.1 chr1  9539464  SLC25A33 ## X164.1 chr1  9588910   TMEM201 ## X165.1 chr1  9728925    CLSTN1 ## X166.1 chr1  9848275  CTNNBIP1 ## X167.1 chr1  9922117      LZIC ## X168.1 chr1  9942922    NMNAT1 ## X169.1 chr1 10032957     UBE4B ## X170.1 chr1 10210705     KIF1B ## X171.1 chr1 10399063       PGD ## X172.1 chr1 10460545      DFFA ## X173.1 chr1 10474949     PEX14 ## X174.1 chr1 10647210     CASZ1 ## X175.1 chr1 11012653    TARDBP ## X176.1 chr1 11054589       SRM ## X177.1 chr1 11066618   EXOSC10 ## X178.1 chr1 11106534      MTOR ## X179.1 chr1 11273197    UBIAD1 ## X180.1 chr1 11654406    FBXO44 ## X181.1 chr1 11674479    MAD2L2 ## X182.1 chr1 11691709    DRAXIN ## X183.1 chr1 11736084    AGTRAP ## X184.1 chr1 11785725     MTHFR ## X185.1 chr1 11806095     CLCN6 ## X186.1 chr1 11845709      NPPA ## X187.1 chr1 11919590  KIAA2013 ## X188.1 chr1 11934716     PLOD1 ## X189.1 chr1 11980443      MFN2 ## X190.1 chr1 12019497      MIIP ## X191.1 chr1 12230029    VPS13D ## X192.1 chr1 12567909     DHRS3 ## X193.1 chr1 13749414     PRDM2 ## X194.1 chr1 14945918      KAZN ## X195.1 chr1 15409887     EFHD2 ## X196.1 chr1 15491400     CASP9 ## X197.1 chr1 15526847   DNAJC16 ## X198.1 chr1 15617457      DDI2 ## X199.1 chr1 15684319   PLEKHM2 ## X1100  chr1 15758794    FBLIM1 ## X1101  chr1 15807161    UQCRHL ##     chr                                            start start.loc ## 1  chr1  chr1__826205__LINC00115__chr1__15807161__UQCRHL    826205 ## 3  chr1   chr1__113929323__HIPK1__chr1__153633981__CHTOP 113929323 ## 5  chr1   chr1__169132530__NME7__chr1__203127725__ADORA1 169132530 ## 6  chr1  chr1__826205__LINC00115__chr1__15807161__UQCRHL    826205 ## 35 chr1  chr1__826205__LINC00115__chr1__15807161__UQCRHL    826205 ## 38 chr1 chr1__93180715__CCDC18__chr1__144887287__SRGAP2B  93180715 ##                                               stop  stop.loc cluster    length ## 1    chr1__9588910__TMEM201__chr1__25884178__STMN1  25884178       0  25057973 ## 3   chr1__153990761__RPS27__chr1__162497804__UHMK1 162497804       0  48568481 ## 5  chr1__169792531__METTL18__chr1__203305518__BTG2 203305518       0  34172988 ## 6   chr1__213988532__PROX1__chr1__244653125__DESI2 244653125       1 243826920 ## 35     chr1__9234773__H6PD__chr1__25616790__MAN1C1  25616790       2  24790585 ## 38    chr1__154161812__TPM3__chr1__162561898__UAP1 162561898       2  69381183 head(scML$partitions) ##    global_expr CNV ## V3           2   1 ## V4           2   1 ## V5           6   0 ## V6           2   1 ## V7           6   0 ## V8           6   2"},{"path":"/articles/scMuffin.html","id":"cnv-visualization","dir":"Articles","previous_headings":"CNV inference","what":"CNV visualization","title":"scMuffin package vignettes","text":"scMuffin provides two visualizations CNVs: heatmap cluster average profile plot. heatmap based ComnplexHeatmap package enables visualization genomic location series given genes (specified argument genes), , alternatively, location detected CNVs (argument mark.detected.cnv = T)  function plot_profile_CNV plots median CNV profile cluster:","code":"col_fun <- circlize::colorRamp2(seq(-0.2, 0.2, length.out = 11),                                  rev(pals::brewer.rdylbu(11))) heatmap_CNV(scMuffinList = scML,              genes = c(\"YBX1\", \"HNRNPM\"),              genes.labels = T,              col = col_fun)  heatmap_CNV(scMuffinList = scML, mark.detected.cnv = T, col=col_fun) plot_profile_CNV(scMuffinList = scML, cluster = 0, cex.points = 0.5)"},{"path":"/articles/scMuffin.html","id":"transcriptional-complexity","dir":"Articles","previous_headings":"","what":"Transcriptional complexity","title":"scMuffin package vignettes","text":"transcriptional complexity (TC) can quantified means function transcr_compl. corresponding summary element contains data.frame number cell transcripts, number genes detected every cell, TC-ratio (C), TC-LMR (linear model residual) TC-H (entropy):","code":"scML <- transcr_compl(scML) head(scML$transcr_compl$summary) ##    tot_counts n_genes         C        H          LM ## V3      16228    1051 0.8628900 6.522372 -0.02561130 ## V4      14286    1168 1.0893060 6.736431  0.06164645 ## V5      15857    1217 1.0225564 6.602594  0.04559174 ## V6      15157    1208 1.0618701 6.763307  0.05703916 ## V7      15609    1171 0.9995385 6.535546  0.03398037 ## V8      15286    1218 1.0616250 6.685640  0.05786558"},{"path":"/articles/scMuffin.html","id":"cell-proliferation-rate","dir":"Articles","previous_headings":"","what":"Cell proliferation rate","title":"scMuffin package vignettes","text":"Cell proliferation quantified considering maximum two scores G1/S G2/M gene sets: proliferation score stored summary element scML$proliferation:","code":"scML <- proliferation_analysis(scMuffinList = scML) head(scML$proliferation$summary) ##    Proliferation_score ## V3          0.22333804 ## V4          0.48095696 ## V5         -0.21546692 ## V6          0.33213053 ## V7         -0.08829706 ## V8         -0.11826046"},{"path":"/articles/scMuffin.html","id":"cell-state-trajectories","dir":"Articles","previous_headings":"","what":"Cell state trajectories","title":"scMuffin package vignettes","text":"Diffusion maps identify differentiation trajectories. scMuffin relies diffusion pseudo time calculation available R package “destiny” (Angerer et al. 2016). calculate diffusion map first 50 PC (speed computation), using random cell obtain diffusion pseudotimes: data.frame important features analysis (first two eigenvectors, pseudotime, branch information whether cell tip branch ) stored scML$diffusion_map_pseudo_t$summary: full DPT object destiny stored element scML$diffusion_map_pseudo_t$full. allows user take advantage destiny functions, plot(), e.g. function plot_diff_map() visualizes diffusion map cells colored set cell-level values. following example plot diffusion map colored CNV-based cell clusters:","code":"scML <- diff_map(scML,                   root_cell = \"random\",                  n_pcs = 50) scML$diffusion_map_pseudo_t$summary ##            DC1         DC2       dpt branch  tips ## V3  0.02440015 0.027054071 1.3328347     NA FALSE ## V4  0.03072120 0.038239911 1.4752607      2 FALSE ## V5 -0.01926577 0.005752026 0.3735439      1 FALSE ## V6  0.03191479 0.047083928 1.5085980      2 FALSE ## V7 -0.01855966 0.004971247 0.3738625      1 FALSE ## V8 -0.01856063 0.005047917 0.3926285      1 FALSE destiny::plot(scML$diffusion_map_pseudo_t$full, col_by = 'branch') plot_diff_map(scMuffinList = scML,                col_data = setNames(scML$partitions$CNV, rownames(scML$partitions)))"},{"path":"/articles/scMuffin.html","id":"cluster-enrichment-assessment","dir":"Articles","previous_headings":"","what":"Cluster enrichment assessment","title":"scMuffin package vignettes","text":"Cell clusters can assessed enrichment quantitative categorical values. appropriate statistical test automatically chosen according feature type. example, assess cluster enrichment feature gene_set_scoring (quantitative one) cluster defined partition global_expr: case quantitative features result list named CSEA, placed elements cluster_data$global_expr (partition id). list contains gene set table leading edge results. ’s result related gene set Angiogenesis: example, assess cluster enrichment relation categorical feature CC_Phase, namely cell cycle phase calculated means Seurat function CellCycleScoring() added scML means add_features() (see ): categorical features result list named ORA, placed elements cluster_data$global_expr (partition id). list contains ORA results every categorical value. ’s enrichment clusters terms cells value “G1”: enrichment analysis results appearing tables can easily extracted organized clusters--values table means extract_cluster_enrichment_table. instance, extract CSEA NES FDRq values, ORA er (enrichment ratio) values: tables can plotted function plot_heatmap_features_by_clusters. following example plot NES values asterisks according significance:  Similarly, ’s possible extract significant “tags” clusters; example, extract top 3 tags FDRq (CSEA) p_adj (ORA): results placed cluster_tags element: results cluster enrichment can visualized barplots boxplots , respectively, categorical values quantitative values.","code":"scML <- assess_cluster_enrichment(scML,                                    feature_name = \"gene_set_scoring\",                                    partition_id = \"global_expr\") scML$cluster_data$global_expr$CSEA$Angiogenesis ##   id size         es        nes nperm      p_val  adj_p_val q_val       FDRq ## 1  0  588 -0.1912822         NA     2         NA         NA    NA         NA ## 2  1  538  0.1957418  0.8894305    95 0.80000000 0.93333333    NA 0.80000000 ## 3  2  500  0.2160336  0.9846048    94 0.56382979 0.78936170    NA 1.00000000 ## 4  3  331 -0.3133212         NA     7         NA         NA    NA         NA ## 5  4  257  0.2206047  0.9748262    89 0.48314607 0.78936170    NA 0.78624535 ## 6  5  186  0.2309628  0.9659241    81 0.53086420 0.78936170    NA 0.66022305 ## 7  6  176  0.6179953  2.4796553    83 0.01204819 0.07954545    NA 0.01204819 ## 8  7  140  0.4205973  1.6200568    88 0.02272727 0.07954545    NA 0.02272727 ## 9  8  115 -0.1547180 -0.7373612    14 1.00000000 1.00000000    NA 1.00000000 ##   tags tags_perc list_top list_top_perc lead_edge ## 1  123 0.2525667      505     0.2056189 0.2502578 ## 2   95 0.1779026      477     0.1942182 0.1831786 ## 3   62 0.1593830      334     0.1359935 0.1636240 ## 4   95 0.3356890      503     0.2048046 0.3017030 ## 5   85 0.3333333      768     0.3127036 0.2556414 ## 6   23 0.1729323      387     0.1575733 0.1540237 ## 7  107 0.6079545      633     0.2577362 0.4860970 ## 8   37 0.3700000      676     0.2752443 0.2795416 ## 9   31 0.3131313      662     0.2695440 0.2383358 scML <- assess_cluster_enrichment(scML,                                    feature_name = \"CC_Phase\",                                    partition_id = \"global_expr\") scML$cluster_data$global_expr$ORA$CC_Phase$G1 ##   id    N   wb  bb  bd wbd       exp       er            p        p_adj ## 0  0 2831 2056 775 588 547 427.03214 1.280934 4.898697e-43 2.204414e-42 ## 1  1 2831 2056 775 538 516 390.71989 1.320639 4.370181e-53 3.933163e-52 ## 2  2 2831 2056 775 500   0 363.12257 0.000000 1.000000e+00 1.000000e+00 ## 3  3 2831 2056 775 331 299 240.38714 1.243827 4.638303e-17 8.348946e-17 ## 4  4 2831 2056 775 257 255 186.64500 1.366230 1.095704e-34 3.287111e-34 ## 5  5 2831 2056 775 186 148 135.08160 1.095634 1.546645e-02 1.988543e-02 ## 6  6 2831 2056 775 176 174 127.81915 1.361298 1.102600e-22 2.480850e-22 ## 7  7 2831 2056 775 140 117 101.67432 1.150733 1.320545e-03 1.980817e-03 ## 8  8 2831 2056 775 115   0  83.51819 0.000000 1.000000e+00 1.000000e+00 csea_fdr_table <- extract_cluster_enrichment_table(scML,                                                      partition_id = \"global_expr\",                                                     type = \"CSEA\",                                                     quantity = \"FDRq\") csea_nes_table <- extract_cluster_enrichment_table(scML,                                                      partition_id = \"global_expr\",                                                     type = \"CSEA\",                                                    quantity = \"nes\") ora_p_table <- extract_cluster_enrichment_table(scML,                                                  partition_id = \"global_expr\",                                                  type = \"ORA\",                                                  quantity = \"p\") csea_fdr_table ##   Angiogenesis ## 0           NA ## 1   0.80000000 ## 2   1.00000000 ## 3           NA ## 4   0.78624535 ## 5   0.66022305 ## 6   0.01204819 ## 7   0.02272727 ## 8   1.00000000 plot_heatmap_features_by_clusters(feature_source = csea_nes_table,                                    significance_matrix = csea_fdr_table,                                    sig_threshold = 0.05) scML <- extract_cluster_enrichment_tags(scML,                                          partition_id = \"global_expr\",                                          n_max_per_cluster = 3,                                          CSEA_selection_criterion = \"FDRq\",                                          only_pos_nes = TRUE,                                          CSEA_selection_threshold = 0.05,                                          ORA_selection_criterion = \"p_adj\",                                          ORA_selection_threshold = 0.25) head(scML$cluster_data$global_expr$cluster_tags$CSEA) ## $`0` ## [1] \"Cell_Cycle\" ##  ## $`1` ## [1] \"Hypoxia\"      \"Inflammation\" \"Metastasis\"   ##  ## $`2` ## [1] \"DNA_repair\"    \"Invasion\"      \"Proliferation\" ##  ## $`3` ## [1] \"Hypoxia\"       \"Proliferation\" \"Quiescence\"    ##  ## $`4` ## [1] \"Hypoxia\"    \"Metastasis\" \"Cell_Cycle\" ##  ## $`5` ## [1] \"DNA_damage\" \"Stemness\"   \"DNA_repair\" barplot_cluster(scML,                  partition_id = \"global_expr\",                  feature_name = \"CC_Phase\",                  feature_id = \"CC_Phase\") boxplot_cluster(scML,                  feature_name = \"gene_set_scoring\",                  partition_id = \"global_expr\")"},{"path":[]},{"path":"/articles/scMuffin.html","id":"intra-dataset","dir":"Articles","previous_headings":"Comparison between clusters","what":"Intra-dataset","title":"scMuffin package vignettes","text":"function overlap_matrix calculates overlap coefficient -pairs clusters two partitions cells (dataset): results stored element `cluster_comparison```:","code":"scML <- overlap_matrix(scML) head(scML$cluster_comparison$overlap_matrix) ##                   CNV_0       CNV_1     CNV_2      CNV_3 global_expr_0 ## CNV_0         1.0000000 0.000000000 0.0000000 0.00000000   0.389455782 ## CNV_1         0.0000000 1.000000000 0.0000000 0.00000000   0.005102041 ## CNV_2         0.0000000 0.000000000 1.0000000 0.00000000   0.559523810 ## CNV_3         0.0000000 0.000000000 0.0000000 1.00000000   0.082568807 ## global_expr_0 0.3894558 0.005102041 0.5595238 0.08256881   1.000000000 ## global_expr_1 0.6115242 0.000000000 0.3401487 0.07951070   0.000000000 ##               global_expr_1 global_expr_2 global_expr_3 global_expr_4 ## CNV_0             0.6115242    0.00400000    0.12688822   0.665369650 ## CNV_1             0.0000000    0.97800000    0.05740181   0.000000000 ## CNV_2             0.3401487    0.00600000    0.17824773   0.326848249 ## CNV_3             0.0795107    0.01834862    0.64525994   0.007782101 ## global_expr_0     0.0000000    0.00000000    0.00000000   0.000000000 ## global_expr_1     1.0000000    0.00000000    0.00000000   0.000000000 ##               global_expr_5 global_expr_6 global_expr_7 global_expr_8 ## CNV_0            0.00000000     0.7386364   0.007142857   0.000000000 ## CNV_1            0.79569892     0.0000000   0.850000000   0.973913043 ## CNV_2            0.02150538     0.2613636   0.007142857   0.008695652 ## CNV_3            0.18279570     0.0000000   0.135714286   0.017391304 ## global_expr_0    0.00000000     0.0000000   0.000000000   0.000000000 ## global_expr_1    0.00000000     0.0000000   0.000000000   0.000000000"},{"path":"/articles/scMuffin.html","id":"inter-dataset","dir":"Articles","previous_headings":"Comparison between clusters","what":"Inter-dataset","title":"scMuffin package vignettes","text":"Inter-dataset comparison performed function inter_dataset_comparison, require list Seurat objects gene set list. activity gene set list assessed clusters datasets. needed, function prepare_cluster_markers_list provides possibility prepare gene set list cluster markers, starting  function can used analyze gene set. following example assess expression CancerSEA gene sets across datasets: caption","code":"dataset_cmp_res <- inter_dataset_comparison(seu_obj_list = seu_obj_list,                                              gsl = cluster_markers_list,                                              genes_max = 500, genes_min = 5) plot_heatmap_dataset_comparison(dataset_cmp_res,                                  outfile = \"heatmap_ds_cmp.png\") plot_heatmap_dataset_comparison(dataset_cmp_res,                                  outfile = \"heatmap_ds_cmp_p.png\",                                  type = \"significance\") gsl <- prepare_gsls(gs_sources = \"CancerSEA\",                      genes = unlist(lapply(seu_obj_list, rownames))) dataset_cmp_res_cancersea <- inter_dataset_comparison(seu_obj_list = seu_obj_list,                                                        gsl = gsl$CancerSEA,                                                        genes_max = 500,                                                        genes_min = 5) plot_heatmap_dataset_comparison(dataset_cmp_res_cancersea,                                  outfile = \"heatmap_ds_cmp_cancer.png\")"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Valentina Nale. Author. Noemi Di Nanni. Author. Alice Chiodi. Author. Ettore Mosca. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nale V, Di Nanni N, Chiodi , Mosca E (2024). scMuffin: MUlti-Features INtegrative approach single-cell data analysis. R package version 1.1.6.","code":"@Manual{,   title = {scMuffin: MUlti-Features INtegrative approach for single-cell data analysis},   author = {Valentina Nale and Noemi {Di Nanni} and Alice Chiodi and Ettore Mosca},   year = {2024},   note = {R package version 1.1.6}, }"},{"path":"/index.html","id":"scmuffin---a-multi-features-integrative-approach-for-sc-data-analysis","dir":"","previous_headings":"","what":"MUlti-Features INtegrative approach for single-cell data analysis","title":"MUlti-Features INtegrative approach for single-cell data analysis","text":"Single-cell (SC) gene expression analysis crucial dissect complex cellular heterogeneity solid tumors, one main obstacles development effective cancer treatments. tumors typically contain mixture cells aberrant genomic transcriptomic profiles affecting specific sub-populations might pivotal role cancer progression, whose identification eludes bulk RNA-sequencing approaches. scMuffin R package enables characterization cell identity solid tumors basis various complementary analyses SC gene expression data, : gene set expression (cell-level cluster level); CNV inferece; transcriptional complexity; cell state trajectories; proliferation state; cluster enrichment assessment (quantitative categorical values). Typical applications scMuffin include: characterize expression cells clusters; distinguish normal tumoral cells; associate clusters phenotypes; define cell identities; cluster cells different ways; link genomic aberrations phenotypes; identify subtle differences cell subtypes cell states; compare datasets based gene set expression. Documentation: https://emosca-cnr.github.io/scMuffin Source code: https://github.com/emosca-cnr/scMuffin Citation: https://doi.org/10.1186/s12859-023-05563-y Contacts: Ettore Mosca, Bioinformatics Lab, CNR-ITB Paride Pelucchi, Stem Cell Biology Cancer Lab, CNR-ITB","code":""},{"path":"/reference/CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV — CNV","title":"CNV — CNV","text":"Function used calculate_CNV.","code":""},{"path":"/reference/CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV — CNV","text":"","code":"CNV(x, wnd_size = 100, na.rm = FALSE)"},{"path":"/reference/CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV — CNV","text":"x list dataframes retrieved 'preprocess_object_for_cnv'. wnd_size number adjacent genes consider na.rm whether remove genes missing value expression .","code":""},{"path":"/reference/CNV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CNV — CNV","text":"\"Single-cell RNA-seq highlights intratumoral heterogeneity primary glioblastoma\" Patel et al. (DOI: 10.1126/science.1254257), Supplementary materials","code":""},{"path":"/reference/CNV_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV analysis — CNV_analysis","title":"CNV analysis — CNV_analysis","text":"CNV analysis","code":""},{"path":"/reference/CNV_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV analysis — CNV_analysis","text":"","code":"CNV_analysis(   scMuffinList = NULL,   mc.cores = 1,   reference = NULL,   min_cells = 100,   min_genes = 200,   wnd_size = 100,   center_cells = TRUE,   center_genes = FALSE,   expr_lim = FALSE,   method = \"mean\",   na.rm = FALSE,   z.score = FALSE,   eps = NULL,   n_comp = 10,   gene_ann = NULL,   ... )"},{"path":"/reference/CNV_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV analysis — CNV_analysis","text":"scMuffinList scMuffinList object mc.cores number cores; reference one-column data.frame reference expression profile; rownames must match genes_by_cell; min_cells minimum numbver cells gene must expressed; min_genes minimun number genes expressed cell; wnd_size number adjacent genes considered; center_cells whether center cells. Default TRUE center_genes whether center genes . Default FALSE. using reference useful set TRUE expr_lim min max values relative expression; default, lower higher whiskers returned grDevices::boxplot.stats used. Set NA anything value length(expr_lim) != 2 disable removal outliers. method \"mean\": subtract average profile reference cluster every cell (default); \"min_max\" (Tirosh et al., DOI: 10.1126/science.aad0501) can used tested yet na.rm whether remove 0 values CNV estimation z.score whether use z-scores cluster median CNV profile, instead median . eps absolute threshold call CNV regions. n_comp number PCA components used clustering gene_ann optional data.frame gene annotation mandatory columns \"Chromosome\", \"symbol\" \"pos\" (genomic location). NULL gene locations collected org.Hs.eg.db ... arguments passed Seurat::FindClusters()","code":""},{"path":"/reference/add_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a feature to scMuffinList — add_features","title":"Add a feature to scMuffinList — add_features","text":"Add feature scMuffinList","code":""},{"path":"/reference/add_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a feature to scMuffinList — add_features","text":"","code":"add_features(scMuffinList = NULL, name = NULL, summary = NULL, full = NULL)"},{"path":"/reference/add_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a feature to scMuffinList — add_features","text":"scMuffinList scMuffinList object name feature name summary data.frame cell identifiers row.names full optional information related feature, like cell-level statistics","code":""},{"path":"/reference/add_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a feature to scMuffinList — add_features","text":"scMuffinList additional feature","code":""},{"path":"/reference/add_partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a clustering to the clustering list — add_partitions","title":"Adds a clustering to the clustering list — add_partitions","text":"Add partition set partitions","code":""},{"path":"/reference/add_partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a clustering to the clustering list — add_partitions","text":"","code":"add_partitions(scMuffinList = NULL, clusters = NULL, partition_id = NULL)"},{"path":"/reference/add_partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a clustering to the clustering list — add_partitions","text":"scMuffinList scMuffinList object clusters named factor values cells names names cluster labels partition_id unique identifier partition","code":""},{"path":"/reference/add_partitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a clustering to the clustering list — add_partitions","text":"scMuffinList additional partition","code":""},{"path":"/reference/adj_outliers_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outliers to avoid that these influence colors — adj_outliers_col","title":"Remove outliers to avoid that these influence colors — adj_outliers_col","text":"definition outliers based function 'boxplot.stats()'. Values x lower extreme lower whisker set equal ; values x greater exteme upper whisker set equal .","code":""},{"path":"/reference/adj_outliers_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outliers to avoid that these influence colors — adj_outliers_col","text":"","code":"adj_outliers_col(x)"},{"path":"/reference/adj_outliers_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outliers to avoid that these influence colors — adj_outliers_col","text":"x numeric vector","code":""},{"path":"/reference/apply_CNV_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"apply_CNV_reference — apply_CNV_reference","title":"apply_CNV_reference — apply_CNV_reference","text":"Add reference vector CNV matrix","code":""},{"path":"/reference/apply_CNV_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply_CNV_reference — apply_CNV_reference","text":"","code":"apply_CNV_reference(   cnv = NULL,   cnv_clustering = NULL,   reference = \"reference\",   eps = 0.2,   method = c(\"mean\", \"min_max\") )"},{"path":"/reference/apply_CNV_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply_CNV_reference — apply_CNV_reference","text":"cnv output calculate_CNV cnv_clustering output cluster_by_features(..., cnv=TRUE, ...) reference name reference column eps threshold min_max method method \"mean\" (default): subtract average profile reference cluster every cell; \"min_max\" see Tirosh et al. (DOI: 10.1126/science.aad0501). \"min_max\" method values () maximum (minimum) reference cluster + (-) eps set 0. lower (upper) extreme whisker considered minimum (maximum) values.","code":""},{"path":"/reference/assess_cluster_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","title":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","text":"Assess cluster enrichment using ORA categorical features CSEA numeric features.","code":""},{"path":"/reference/assess_cluster_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","text":"","code":"assess_cluster_enrichment(   scMuffinList = NULL,   feature_name = NULL,   partition_id = NULL,   min.cells.feature = 100,   min.cells.cluster = 10,   fract_min = 0.2,   mc.cores = 1,   csea.k = 99,   min.k = 10 )"},{"path":"/reference/assess_cluster_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","text":"scMuffinList scMuffinList list feature_name names feature considered. must one names(scMuffinList) partition_id identifier partition considered min.cells.feature minimum number cells feature must value min.cells.cluster minimum number cells cluster fract_min cluster size less equal fraction cell null feature values analysed mc.cores number cores csea.k number CSEA permutations min.k minimum number valid permutations support empirical nulls","code":""},{"path":"/reference/assess_cluster_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","text":"scMuffinList CSEA ORA elements scMuffinList$cluster_data considered partition","code":""},{"path":"/reference/assess_cluster_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess enrichment with ORA or CSEA — assess_cluster_enrichment","text":"output CSEA table statistics every tested gene set.  output ORA composed series tables enrichment results, one every possible categorical value. See [extract_cluster_enrichment_table] extract summary table CSEA ORA results.","code":""},{"path":"/reference/barplot_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of cluster enrichment in a categorical feature — barplot_cluster","title":"Barplot of cluster enrichment in a categorical feature — barplot_cluster","text":"Produce barplots (1 cluster) distribution cells associated values selected feature. png figure cluster saved dir_out.","code":""},{"path":"/reference/barplot_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of cluster enrichment in a categorical feature — barplot_cluster","text":"","code":"barplot_cluster(   scMuffinList = NULL,   feature_name = NULL,   feature_id = NULL,   partition_id = NULL,   dir_out = \"./\",   only_pos_nes = TRUE,   cex.axis = 0.8,   p.type = c(\"p\", \"p_adj\"),   width = 180,   height = 180,   units = \"mm\",   res = 300,   legend.pos = \"right\" )"},{"path":"/reference/barplot_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of cluster enrichment in a categorical feature — barplot_cluster","text":"scMuffinList scMuffinList object feature_name name features used. feature_id identifier feature used. partition_id one among partitions dir_out string, output directory only_pos_nes whether consider positive enrichments cex.axis cex.axis p.type p nominal p-value p_adj BH FDR. width image width height image height units image units res image resolution legend.pos position barplot legend","code":""},{"path":"/reference/boxplot_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot of cluster enrichment in a quantitative feature — boxplot_cluster","title":"Boxplot of cluster enrichment in a quantitative feature — boxplot_cluster","text":"Produce boxplots visualize distribution cell values according selected feature png figure cluster saved dir_out.","code":""},{"path":"/reference/boxplot_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot of cluster enrichment in a quantitative feature — boxplot_cluster","text":"","code":"boxplot_cluster(   scMuffinList = NULL,   feature_name = NULL,   partition_id = NULL,   dir_out = \"./\",   n_features = 10,   only_pos_nes = TRUE,   do_scale_features = FALSE,   cex.axis = 0.8,   width = 180,   height = 180,   units = \"mm\",   res = 300 )"},{"path":"/reference/boxplot_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot of cluster enrichment in a quantitative feature — boxplot_cluster","text":"scMuffinList scMuffinList object feature_name names feature considered. must one names(scMuffinList) partition_id one among partitions dir_out output directory n_features maximum number features shown only_pos_nes whether consider positive enrichments do_scale_features whether scale features cex.axis cex.axis width image width height image height units image units res image resolution","code":""},{"path":"/reference/boxplot_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot with points — boxplot_points","title":"Boxplot with points — boxplot_points","text":"Boxplot points","code":""},{"path":"/reference/boxplot_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot with points — boxplot_points","text":"","code":"boxplot_points(   x = NULL,   f = NULL,   col = NULL,   amount = 0.2,   adj.col = 1,   pch = 16,   cex = 0.6,   ylim = NULL,   file = NULL,   width = 180,   height = 180,   units = \"mm\",   res = 300,   image_format = \"png\",   ... )"},{"path":"/reference/boxplot_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot with points — boxplot_points","text":"x values f factor split values col color palette. Equal length levels(f) amount amount jitter adj.col color adjustment pch point pch cex cex ylim ylim file output file width image width height image height units image units res image resolution image_format png jpeg ... argument boxplot","code":""},{"path":"/reference/calc_gs_perm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate permutations — calc_gs_perm","title":"Calculate permutations — calc_gs_perm","text":"Calculate permutations","code":""},{"path":"/reference/calc_gs_perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate permutations — calc_gs_perm","text":"","code":"calc_gs_perm(rll = NULL, perm = NULL, gs = NULL, fract_min = 0.2)"},{"path":"/reference/calc_gs_perm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate permutations — calc_gs_perm","text":"rll numeric matrix genes--ranking criteria; column contains numeric values; rownames mandatory perm vector permuted names gs gene set fract_min cluster size less equal fraction cell null feature values analysed","code":""},{"path":"/reference/calculate_CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CNV — calculate_CNV","title":"Calculate CNV — calculate_CNV","text":"Calculate CNV using moving average approach firstly described Patel et al., 2014 Science (DOI: 10.1126/science)","code":""},{"path":"/reference/calculate_CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CNV — calculate_CNV","text":"","code":"calculate_CNV(   genes_by_cells,   reference = NULL,   mc.cores = 1,   wnd_size = 100,   min_genes = 200,   min_cells = 100,   expr_lim = NULL,   center_cells = TRUE,   na.rm = FALSE,   center_genes = FALSE,   gene_ann = NULL )"},{"path":"/reference/calculate_CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CNV — calculate_CNV","text":"genes_by_cells genes--cells data.frame reference one-column data.frame reference expression profile; rownames must match genes_by_cell; mc.cores number cores; wnd_size number adjacent genes considered; min_genes minimun number genes expressed cell; min_cells minimum number cells gene must expressed; expr_lim min max values relative expression; default, lower higher whiskers returned grDevices::boxplot.stats used. Set NA anything value length(expr_lim) != 2 disbale removal outliers. center_cells whether center cells na.rm whether remove 0 values CNV estimation center_genes whether center genes gene_ann optional data.frame gene annotation mandatory columns \"Chromosome\", \"symbol\" \"pos\" (genomic location). NULL gene locations collected org.Hs.eg.db","code":""},{"path":"/reference/calculate_gs_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene set scores — calculate_gs_scores","title":"Calculate gene set scores — calculate_gs_scores","text":"Calculate gene set scores using approach described Tirosh2016","code":""},{"path":"/reference/calculate_gs_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene set scores — calculate_gs_scores","text":"","code":"calculate_gs_scores(   scMuffinList = NULL,   gs_list = NULL,   mc.cores = 1,   nbins = 25,   nmark_min = 5,   ncells_min = 10,   k = 100,   kmin = 50,   score_type = c(\"relative\", \"mean\"),   null_model = TRUE,   verbose = FALSE,   na.rm = TRUE,   overwrite = FALSE )"},{"path":"/reference/calculate_gs_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene set scores — calculate_gs_scores","text":"scMuffinList scMuffinList object gs_list list gene sets mc.cores number cores nbins number bins split distribution average gene expression nmark_min number minimum markers required succesful calculation gene set score ncells_min number minimum cells gene set succesfully calculated k number permutations kmin minimum number permutations; due missing values hard ensure gene set score can compared k permutations every cell score_type type score. \"relative\", score difference observed gene set average expression k permutations; \"mean\" score equal observed gene set average expression null_model TRUE permutations used. Required score_type=\"relative\" verbose verbosity na.rm whether use NA overwrite whether update gene_set_scoring gene_set_scoring_full elements scMuffinList.","code":""},{"path":"/reference/calculate_gs_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene set scores — calculate_gs_scores","text":"scMuffinList element gene_set_scoring, list contains summary full. element summary contains cells--gene sets data.frame. element \"full\" contains data.frame gene set. See [gs_score()] details.","code":""},{"path":"/reference/calculate_gs_scores.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate gene set scores — calculate_gs_scores","text":"Tirosh2016 10.1126/science.aad0501","code":""},{"path":"/reference/calculate_gs_scores_in_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene set score at cluster level — calculate_gs_scores_in_clusters","title":"Calculate gene set score at cluster level — calculate_gs_scores_in_clusters","text":"Calculate gene set score cluster level","code":""},{"path":"/reference/calculate_gs_scores_in_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene set score at cluster level — calculate_gs_scores_in_clusters","text":"","code":"calculate_gs_scores_in_clusters(   scMuffinList = NULL,   partition_id = NULL,   ncells_min = 5,   null_model = TRUE,   alt = \"g\",   test = \"t\",   fract_min = 0.5 )"},{"path":"/reference/calculate_gs_scores_in_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene set score at cluster level — calculate_gs_scores_in_clusters","text":"scMuffinList scMuffinList object partition_id identifier partition used ncells_min minimum number cells required calculation average signature cluster null_model TRUE consider empirical null based gene set permutations alt alterative passed [wilcox.test()] [t.test()] test type test: t use [t.test()]; wrs use [wilcox.test()] fract_min clusters fraction cells null gene set score considered","code":""},{"path":"/reference/calculate_gs_scores_in_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene set score at cluster level — calculate_gs_scores_in_clusters","text":"scMuffinList cluster level scores `sMuffinList$cluster_data[[partition_id]]`. element [summary] contains clusters--gene sets table, element [full] full result","code":""},{"path":"/reference/cluster_by_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster by features — cluster_by_features","title":"Cluster by features — cluster_by_features","text":"Clustering features_by_cell matrix","code":""},{"path":"/reference/cluster_by_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster by features — cluster_by_features","text":"","code":"cluster_by_features(features_by_cells = NULL, n_comp = 10, ...)"},{"path":"/reference/cluster_by_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster by features — cluster_by_features","text":"features_by_cells features cells n_comp numeric, Dimensions reduction use input ... arguments passed Seurat::FindCLusters","code":""},{"path":"/reference/cluster_by_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster by features — cluster_by_features","text":"features_by_cells Seurat Object, object saved dimension reduction components calculate features cells matrix","code":""},{"path":"/reference/cluster_csea.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cluster enrichment by means of CSEA — cluster_csea","title":"Calculate cluster enrichment by means of CSEA — cluster_csea","text":"Calculate cluster enrichment csea approach","code":""},{"path":"/reference/cluster_csea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cluster enrichment by means of CSEA — cluster_csea","text":"","code":"cluster_csea(   feature_values = NULL,   cell_clusters = NULL,   min.cells.feature = 100,   min.cells.cluster = 10,   mc.cores = 1,   csea.k = 99,   min.k = 10,   fract_min = 0.2 )"},{"path":"/reference/cluster_csea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cluster enrichment by means of CSEA — cluster_csea","text":"feature_values matrix, features cells matrix cell_clusters array cell values named cluster ID min.cells.feature minimum number cells feature must value min.cells.cluster minimum number cells cluster mc.cores number cores csea.k number permutations min.k minimum number valid permutations support empirical nulls fract_min cluster size less equal fraction cell null feature values analysed","code":""},{"path":"/reference/cluster_csea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cluster enrichment by means of CSEA — cluster_csea","text":"list two elements: gs_table leading_edge. See [csea()]","code":""},{"path":"/reference/cluster_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cluster enrichment by means of GSEA — cluster_gsea","title":"Calculate cluster enrichment by means of GSEA — cluster_gsea","text":"Calculate cluster enrichment gsea approach","code":""},{"path":"/reference/cluster_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cluster enrichment by means of GSEA — cluster_gsea","text":"","code":"cluster_gsea(   feature_values = NULL,   cell_clusters = NULL,   min.cells.feature = 100,   min.cells.cluster = 10,   mc.cores = 1,   gsea.k = 99,   min.k.nes = 10 )"},{"path":"/reference/cluster_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cluster enrichment by means of GSEA — cluster_gsea","text":"feature_values matrix, features cells matrix cell_clusters array cell values named cluster ID min.cells.feature minimum number cells feature must value min.cells.cluster minimum number cells cluster mc.cores number cores gsea.k number permutations","code":""},{"path":"/reference/cluster_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cluster enrichment by means of GSEA — cluster_gsea","text":"list two elements: gs_table leading_edge. See [gsea()]","code":""},{"path":"/reference/cluster_gsea.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate cluster enrichment by means of GSEA — cluster_gsea","text":"Ettore Mosca","code":""},{"path":"/reference/cluster_hyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cluster enrichment by hypergeometric test — cluster_hyper","title":"Calculate cluster enrichment by hypergeometric test — cluster_hyper","text":"Calculate cluster enrichment categorical values feature, means hypergeometric test","code":""},{"path":"/reference/cluster_hyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cluster enrichment by hypergeometric test — cluster_hyper","text":"","code":"cluster_hyper(feature_values = NULL, cell_clusters = NULL)"},{"path":"/reference/cluster_hyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cluster enrichment by hypergeometric test — cluster_hyper","text":"feature_values matrix, cells--features cell_clusters array cell values named cluster ID","code":""},{"path":"/reference/cluster_hyper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cluster enrichment by hypergeometric test — cluster_hyper","text":"list data.frames, one categorical value. See [ora()]","code":""},{"path":"/reference/cluster_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell cluster statistics — cluster_stats","title":"Cell cluster statistics — cluster_stats","text":"Calculate mean variance partition id feature id","code":""},{"path":"/reference/cluster_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell cluster statistics — cluster_stats","text":"","code":"cluster_stats(   scMuffinList = NULL,   partition_id = NULL,   feature_name = NULL,   mean_f = mean,   var_f = sd,   na.rm = TRUE )"},{"path":"/reference/cluster_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell cluster statistics — cluster_stats","text":"scMuffinList scMuffinList object partition_id partition id feature_name feature name mean_f function use average var_f function use variability na.rm whether remove NA ","code":""},{"path":"/reference/cluster_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell cluster statistics — cluster_stats","text":"scMuffinList data.frames \"mean\" \"var\" added \"scMuffinList$cluster_data[[partition_id]]\"","code":""},{"path":"/reference/create_features_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Create feature list — create_features_obj","title":"Create feature list — create_features_obj","text":"Create feature list","code":""},{"path":"/reference/create_features_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create feature list — create_features_obj","text":"","code":"create_features_obj(x = NULL)"},{"path":"/reference/create_features_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create feature list — create_features_obj","text":"x data.frame 1 cell values cell id row names","code":""},{"path":"/reference/create_scMuffinList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create scMuffinList — create_scMuffinList","title":"Create scMuffinList — create_scMuffinList","text":"Create scMuffinList counts /normalized data. gene identifiers must . Note CNV analysis currently available symbols gene identifiers.","code":""},{"path":"/reference/create_scMuffinList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create scMuffinList — create_scMuffinList","text":"","code":"create_scMuffinList(counts = NULL, normalized = NULL)"},{"path":"/reference/create_scMuffinList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create scMuffinList — create_scMuffinList","text":"counts genes--cells matrix data.frame counts. Rownames must gene identifiers. normalized genes--cells matrix data.frame normalized expression. Rownames must gene identifiers.","code":""},{"path":"/reference/create_scMuffinList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create scMuffinList — create_scMuffinList","text":"scMuffinList counts normalized elements dgCMatrix.","code":""},{"path":"/reference/csea.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Set Enrichment Analysis — csea","title":"Gene Set Enrichment Analysis — csea","text":"Gene Set Enrichment Analysis","code":""},{"path":"/reference/csea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Set Enrichment Analysis — csea","text":"","code":"csea(   rl = NULL,   gsl = NULL,   k = 99,   min.size = 100,   ord.mode = -1,   min.k = 10,   mc_cores_path = 1,   mc_cores_perm = 1,   fract_min = 0.2 )"},{"path":"/reference/csea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Set Enrichment Analysis — csea","text":"rl numeric matrix genes--ranking criteria; column contains numeric values; rownames mandatory gsl named list gene sets k number permutations min.size minimum number cells null value ord.mode ordering mode: -1 -> descending; 1 ascending; must length equal `ncol(rl)` min.k minimum number valid permutations support empirical nulls mc_cores_path number cores use parallel calculation gene set lists; total number cpu used mc_cores_path * mc_cores_perm mc_cores_perm number cores use parallel calculation ranked list permutations; total number cpu used mc_cores_path * mc_cores_perm fract_min cluster size less equal fraction cell null feature values analysed","code":""},{"path":"/reference/csea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Set Enrichment Analysis — csea","text":"list two data.frames, gs_table leading_edge.","code":""},{"path":"/reference/detect_CNV_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect CNV regions — detect_CNV_regions","title":"Detect CNV regions — detect_CNV_regions","text":"Detect CNV regions eaach cluster chromosome","code":""},{"path":"/reference/detect_CNV_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect CNV regions — detect_CNV_regions","text":"","code":"detect_CNV_regions(scMuffinList = NULL, z.score = FALSE, eps = NULL)"},{"path":"/reference/detect_CNV_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect CNV regions — detect_CNV_regions","text":"scMuffinList scMuffinList object z.score whether use clustere median z-scores CNV profile (TRUE) cluster median CNV profile (FALSE). eps value defines CNV. NUll stard deviation dataset used.","code":""},{"path":"/reference/diff_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of Diffusion Map and Diffusion Pseudo Time — diff_map","title":"Computation of Diffusion Map and Diffusion Pseudo Time — diff_map","text":"functions computes Diffusion Map Diffusion Pseudo Time using package destiny.","code":""},{"path":"/reference/diff_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of Diffusion Map and Diffusion Pseudo Time — diff_map","text":"","code":"diff_map(scMuffinList = NULL, root_cell = \"random\", n_pcs = 50, ...)"},{"path":"/reference/diff_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of Diffusion Map and Diffusion Pseudo Time — diff_map","text":"scMuffinList scMuffinList object root_cell root cell \"random\" pick random root via destiny::random_root function n_pcs number PCs consider, 50 default ... parameters passed destiny::DiffusionMap","code":""},{"path":"/reference/diff_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of Diffusion Map and Diffusion Pseudo Time — diff_map","text":"scMuffinList element \"diffusion_map_pseudo_t\", list summary full. summary data.frame : first two eigenvectors; branch, branch label cell; tips, whether cell tip branching. full contains dpt object, generated [destiny::DPT()]. See destiny information.","code":""},{"path":"/reference/es.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment Score — es","title":"Enrichment Score — es","text":"Enrichment Score","code":""},{"path":"/reference/es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment Score — es","text":"","code":"es(idx = NULL, x = NULL)"},{"path":"/reference/es.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrichment Score — es","text":"idx vector indices subset elements x x named vector, ranked list","code":""},{"path":"/reference/es.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrichment Score — es","text":"data.frame , enrichmet score; tags, leading edge size; tags_perc, leading edge size percent gene set; list_top, rank ES; list_top_perc, rank ES percent full ranked list; lead_edge, gene names leading edge.","code":""},{"path":"/reference/extract_cluster_enrichment_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract cluster enrichment table — extract_cluster_enrichment_table","title":"Extract cluster enrichment table — extract_cluster_enrichment_table","text":"Extract cluster enrichment table desired quantity results generated means [assess_cluster_enrichment()]","code":""},{"path":"/reference/extract_cluster_enrichment_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract cluster enrichment table — extract_cluster_enrichment_table","text":"","code":"extract_cluster_enrichment_table(   scMuffinList,   partition_id = NULL,   type = NULL,   quantity = NULL,   feature_id = NULL )"},{"path":"/reference/extract_cluster_enrichment_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract cluster enrichment table — extract_cluster_enrichment_table","text":"scMuffinList scMuffinList object partition_id id partition used type \"CSEA\" \"ORA\" quantity possible values follows. CSEA: es, enrichment score; p_val empirical p-value; adj_p_val, FDR (BH); nes normalized enrichment score; FDRq empirical FDR. ORA: wbd (white balls drawn), number cells value interest cluster; exp expected number cells value interest cluster; er, enrichment ratio; p, hypergeometric test p-value; p_adj, BH FDR feature_id name features considered. Must `colnames(scMuffinList$cluster_data$[[parition_id]]$CSEA)` `names(scMuffinList$cluster_data$[[parition_id]]$ORA)`","code":""},{"path":"/reference/extract_cluster_enrichment_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract cluster enrichment table — extract_cluster_enrichment_table","text":"cluster enrichment table desired quantity","code":""},{"path":"/reference/extract_cluster_enrichment_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the top results of CSEA and ORA for each cluster — extract_cluster_enrichment_tags","title":"Extract the top results of CSEA and ORA for each cluster — extract_cluster_enrichment_tags","text":"Extract best results CSEA ORA cluster.","code":""},{"path":"/reference/extract_cluster_enrichment_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the top results of CSEA and ORA for each cluster — extract_cluster_enrichment_tags","text":"","code":"extract_cluster_enrichment_tags(   scMuffinList = NULL,   partition_id = NULL,   CSEA_selection_criterion = \"FDRq\",   CSEA_selection_threshold = 0.25,   only_pos_nes = TRUE,   ORA_selection_criterion = \"p_adj\",   ORA_selection_threshold = 0.1,   n_max_per_cluster = 3 )"},{"path":"/reference/extract_cluster_enrichment_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the top results of CSEA and ORA for each cluster — extract_cluster_enrichment_tags","text":"scMuffinList scMuffinList object. partition_id one among partitions. CSEA_selection_criterion selection criteria results CSEA. See extract_cluster_enrichment_table possible values. CSEA_selection_threshold threshold selection tags CSEA. only_pos_nes whether positive nes considered CSEA. ORA_selection_criterion selection criteria results ORA. See extract_cluster_enrichment_table possible values. ORA_selection_threshold threshold selection tags ORA. n_max_per_cluster maximum number tags per cluster.","code":""},{"path":"/reference/extract_cluster_enrichment_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the top results of CSEA and ORA for each cluster — extract_cluster_enrichment_tags","text":"Add overwrite \"cluster_tags\" list `scMuffinList$cluster_data[[partition_id]]`","code":""},{"path":"/reference/filter_gsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a gene set list — filter_gsl","title":"Filter a gene set list — filter_gsl","text":"Filter gene set list","code":""},{"path":"/reference/filter_gsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a gene set list — filter_gsl","text":"","code":"filter_gsl(gsl, universe, min_size = 5, max_size = 500)"},{"path":"/reference/filter_gsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a gene set list — filter_gsl","text":"gsl gene set list (named list) universe set possible values items gsl min_size minimum gene set size max_size maximum gene set size","code":""},{"path":"/reference/filter_gsl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a gene set list — filter_gsl","text":"Filtered gene set list","code":""},{"path":"/reference/genes_in_detected_CNV_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve genes in detected CNV regions — genes_in_detected_CNV_regions","title":"Retrieve genes in detected CNV regions — genes_in_detected_CNV_regions","text":"Retrieve genes detected CNV regions","code":""},{"path":"/reference/genes_in_detected_CNV_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve genes in detected CNV regions — genes_in_detected_CNV_regions","text":"","code":"genes_in_detected_CNV_regions(scMuffinList = NULL)"},{"path":"/reference/genes_in_detected_CNV_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve genes in detected CNV regions — genes_in_detected_CNV_regions","text":"scMuffinList scMuffinList object","code":""},{"path":"/reference/get_msigdb_geneset.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns msigdb geneset in a format compatible with calculate_signatures() — get_msigdb_geneset","title":"Returns msigdb geneset in a format compatible with calculate_signatures() — get_msigdb_geneset","text":"Returns msigdb geneset format compatible calculate_signatures()","code":""},{"path":"/reference/get_msigdb_geneset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns msigdb geneset in a format compatible with calculate_signatures() — get_msigdb_geneset","text":"","code":"get_msigdb_geneset(   species,   category = NULL,   subcategory = NULL,   type = \"gene_symbol\" )"},{"path":"/reference/get_msigdb_geneset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns msigdb geneset in a format compatible with calculate_signatures() — get_msigdb_geneset","text":"species Species name category MSigDB category name, see msigdbr_collections() subcategory MsigDB subcategory name, see msigdbr_collections() type Gene name interest, can gene_symbol entrez_gene","code":""},{"path":"/reference/get_msigdb_geneset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns msigdb geneset in a format compatible with calculate_signatures() — get_msigdb_geneset","text":"List msigdb_output, output msigdbr::msigdbr, path_list, list gene sets","code":""},{"path":"/reference/gs_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set scoring — gs_score","title":"Gene set scoring — gs_score","text":"Calculate gene set scores using approach described Tirosh2016","code":""},{"path":"/reference/gs_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set scoring — gs_score","text":"","code":"gs_score(   gene_set = NULL,   genes_by_cells = NULL,   bins = NULL,   nmark_min = 5,   ncells_min = 5,   k = 100,   kmin = 50,   verbose = FALSE,   null_model = TRUE,   na.rm = TRUE )"},{"path":"/reference/gs_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene set scoring — gs_score","text":"gene_set gene set genes_by_cells real data bins random data nmark_min min number markers ncells_min min number cells k number random gene set considered kmin minimim number k verbose verbosity null_model boolean, whether use permutations na.rm whether remove missing values","code":""},{"path":"/reference/gs_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene set scoring — gs_score","text":"data.frame following columns:","code":""},{"path":"/reference/gs_score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gene set scoring — gs_score","text":"Tirosh2016 10.1126/science.aad0501","code":""},{"path":"/reference/gs_scores_in_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set scoring at cluster level — gs_scores_in_clusters","title":"Gene set scoring at cluster level — gs_scores_in_clusters","text":"Gene set scoring clusters","code":""},{"path":"/reference/gs_scores_in_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set scoring at cluster level — gs_scores_in_clusters","text":"","code":"gs_scores_in_clusters(   score_table = NULL,   cell_clusters = NULL,   ncells_min = 5,   alt = \"g\",   test = \"t\",   null_model = TRUE,   fract_min = 0.5 )"},{"path":"/reference/gs_scores_in_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene set scoring at cluster level — gs_scores_in_clusters","text":"score_table real data cell_clusters vector cell clusters ncells_min minimum number cells required calculation average signature cluster alt alterative passed [wilcox.test()] [t.test()] test type test: t use [t.test()]; wrs use [wilcox.test()] null_model TRUE consider empirical null based gene set permutations fract_min clusters fraction cells null gene set score considered","code":""},{"path":"/reference/gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Set Enrichment Analysis — gsea","title":"Gene Set Enrichment Analysis — gsea","text":"Gene Set Enrichment Analysis","code":""},{"path":"/reference/gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Set Enrichment Analysis — gsea","text":"","code":"gsea(   rl,   gsl,   k = 100,   min.size = 100,   ord.mode = -1,   min.k.nes = 10,   mc_cores_path = 1,   mc_cores_perm = 1 )"},{"path":"/reference/gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Set Enrichment Analysis — gsea","text":"rl numeric matrix genes--ranking criteria; column contains numeric values; rownames mandatory gsl named list gene sets k number permutations ord.mode ordering mode: -1 -> descending; 1 ascending; must length equal `ncol(rl)` mc_cores_path number cores use parallel calculation gene set lists; total number cpu used mc_cores_path x mc_cores_perm mc_cores_perm number cores use parallel calculation ranked list permutations; total number cpu used mc_cores_path x mc_cores_perm","code":""},{"path":"/reference/gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Set Enrichment Analysis — gsea","text":"list two data.frames, gs_table leading_edge. gs_table contains: es, enrichment score; nes normalized enrichment score; p-value, empirical p-value; adjusted p-value, BH FDR; FDR q-value, empirical FDR. leading_edge contains: tags, leading edge size; tags_perc, leading edge size percent gene set; list_top, rank ES; list_top_perc, rank ES percent full ranked list; lead_edge, gene names leading edge.","code":""},{"path":"/reference/gsls_EntrezID.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set lists (Entrez Gene ID)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_EntrezID","title":"Gene set lists (Entrez Gene ID)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_EntrezID","text":"Gene set lists (Entrez Gene ID) Gene set lists collected following sources: - CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload - CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker - CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker - PNDB: https://panglaodb.se - Tirosh2016: 10.1126/science.aad0501 - Ribosomal proteins:","code":""},{"path":"/reference/gsls_EntrezID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set lists (Entrez Gene ID)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_EntrezID","text":"","code":"gsls_EntrezID"},{"path":"/reference/gsls_EntrezID.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene set lists (Entrez Gene ID)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_EntrezID","text":"object class list length 6.","code":""},{"path":"/reference/gsls_Symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene set lists (Symbol)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_Symbol","title":"Gene set lists (Symbol)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_Symbol","text":"Gene set lists (Symbol) Gene set lists collected following sources: - CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload - CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker - CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker - PNDB: https://panglaodb.se - Tirosh2016: 10.1126/science.aad0501 - Ribosomal proteins:","code":""},{"path":"/reference/gsls_Symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene set lists (Symbol)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_Symbol","text":"","code":"gsls_Symbol"},{"path":"/reference/gsls_Symbol.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene set lists (Symbol)\nGene set lists collected from the following sources:\n- CancerSEA: http://biocc.hrbmu.edu.cn/CancerSEA/goDownload\n- CM_cancer: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- CM_normal: http://bio-bigdata.hrbmu.edu.cn/CellMarker\n- PNDB: https://panglaodb.se\n- Tirosh2016: 10.1126/science.aad0501\n- Ribosomal proteins: — gsls_Symbol","text":"object class list length 6.","code":""},{"path":"/reference/heatmap_CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Heatmap — heatmap_CNV","title":"CNV Heatmap — heatmap_CNV","text":"CNV Heatmap","code":""},{"path":"/reference/heatmap_CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Heatmap — heatmap_CNV","text":"","code":"heatmap_CNV(   scMuffinList = NULL,   genes = NULL,   genes.labels = FALSE,   mark.detected.cnv = FALSE,   file = NULL,   width = 180,   height = 180,   units = \"mm\",   res = 300,   cluster_fontsize = 8,   chrom_fontsize = 8,   legend_fontsize = 8,   genes.labels.fontsize = 8,   ... )"},{"path":"/reference/heatmap_CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Heatmap — heatmap_CNV","text":"scMuffinList scMuffinList object genes gene labels show row annotation genes.labels whether show gene labels just mark position mark.detected.cnv whether show detected CNV regions file File name save figure png file width image width height image height units image units res image resolution cluster_fontsize cluster fontsize chrom_fontsize chromosome fontsize legend_fontsize legend fontsize genes.labels.fontsize gene labels fontsize ... arguments passed ComplexHeatmap::Heatmap","code":""},{"path":"/reference/inter_dataset_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Inter-dataset cluster similarity — inter_dataset_comparison","title":"Inter-dataset cluster similarity — inter_dataset_comparison","text":"Quantify similarity clusters two datasets, basis average cluster marker expression","code":""},{"path":"/reference/inter_dataset_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inter-dataset cluster similarity — inter_dataset_comparison","text":"","code":"inter_dataset_comparison(   seu_obj_list = NULL,   gsl = NULL,   genes_min = 3,   genes_max = 500,   mc.cores = 1,   null_model = TRUE,   ncells_min = 5,   cluster_rows = FALSE,   cluster_columns = FALSE,   ... )"},{"path":"/reference/inter_dataset_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inter-dataset cluster similarity — inter_dataset_comparison","text":"seu_obj_list list Seurat objects gsl gene set list genes_min minimum number genes required among markers cluster genes_max maximum number genes required among markers cluster mc.cores number cores null_model whether use empirical null model. See calculate_signature ncells_min minim number cells cluster cluster_rows whether cluster rows cluster_columns whether cluster columns ... arguments passed calculate_gs_scores","code":""},{"path":"/reference/inter_dataset_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inter-dataset cluster similarity — inter_dataset_comparison","text":"list : clust_sim, matrix clucster similarity; m1=m1 m2=m2 markers_1, markers dataset 1; markers_2, markers dataset 2;","code":""},{"path":"/reference/inter_ds_cluster_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Inter-dataset cluster similarity — inter_ds_cluster_sim","title":"Inter-dataset cluster similarity — inter_ds_cluster_sim","text":"Quantify similarity clusters two datasets, basis average cluster marker expression","code":""},{"path":"/reference/inter_ds_cluster_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inter-dataset cluster similarity — inter_ds_cluster_sim","text":"","code":"inter_ds_cluster_sim(   gbc_1,   gbc_2,   clusters_1,   clusters_2,   cluster_markers_1,   cluster_markers_2,   genes_min = 3,   genes_max = 500,   mc.cores = 1,   null_model = TRUE,   ncells_min = 5,   do_plot = TRUE,   dataset_name_1 = \"S1\",   dataset_name_2 = \"S2\",   outfile = \"cluster_similarity.jpg\",   pal = NULL,   cluster_rows = FALSE,   cluster_columns = FALSE,   top_genes = FALSE,   ... )"},{"path":"/reference/inter_ds_cluster_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inter-dataset cluster similarity — inter_ds_cluster_sim","text":"gbc_1 genes--cells expression matrix dataset 1 gbc_2 genes--cells expression matrix dataset 2 clusters_1 named vector cell clustering fo dataset 1 clusters_2 named vector cell clustering fo dataset 2 cluster_markers_1 list markers cluster dataset 1 cluster_markers_2 list markers cluster dataset 2 genes_min minimum number genes required among markers cluster genes_max maximum number genes required among markers cluster mc.cores number cores null_model whether use empirical null model. See calculate_signature ncells_min minim number cells cluster do_plot whether plot results dataset_name_1 dataset 1 name dataset_name_2 dataset 2 name outfile file name pal palette output heatmap cluster_rows whether cluster rows cluster_columns whether cluster columns top_genes specified, first top_genes genes every element lists cluster_markers_1 cluster_markers_2 considered. implies markers clusters considered sorted decreasing relevance. Default FALSE, ... arguments passed calculate_signatures","code":""},{"path":"/reference/inter_ds_cluster_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inter-dataset cluster similarity — inter_ds_cluster_sim","text":"list : clust_sim, matrix clucster similarity; m1=m1 m2=m2 markers_1, markers dataset 1; markers_2, markers dataset 2;","code":""},{"path":"/reference/keep_strongest_representative.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep the feature with the average highest values — keep_strongest_representative","title":"Keep the feature with the average highest values — keep_strongest_representative","text":"Keep feature average highest values","code":""},{"path":"/reference/keep_strongest_representative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep the feature with the average highest values — keep_strongest_representative","text":"","code":"keep_strongest_representative(genes_by_cells = NULL, row.names = NULL)"},{"path":"/reference/keep_strongest_representative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep the feature with the average highest values — keep_strongest_representative","text":"genes_by_cells genes--cells expression matrix row.names row.names assigned","code":""},{"path":"/reference/meta_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of the various partitions and definition of meta-clusters — meta_cluster","title":"Analysis of the various partitions and definition of meta-clusters — meta_cluster","text":"Calculate overlap matrix -pars clusters existing partitions.","code":""},{"path":"/reference/meta_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of the various partitions and definition of meta-clusters — meta_cluster","text":"","code":"meta_cluster(scMuffinList = NULL, n_step = 11, max_clust = 10, do_plot = FALSE)"},{"path":"/reference/meta_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of the various partitions and definition of meta-clusters — meta_cluster","text":"scMuffinList scMuffinList object least two partitions n_step number used divide hclust dendrogram height obtain cut values calculate silhouette max_clust maximum number clusters do_plot whether silohouette plot ","code":""},{"path":"/reference/meta_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of the various partitions and definition of meta-clusters — meta_cluster","text":"scMuffinList : scMuffinList$cluster_comparison$overlap_matrix, overlap matrix scMuffinList$cluster_comparison$meta_clusters, list information meta-clusters: dissimilarity, dissimilarity matrix; hclust_out, stats::hclust output; clusters, data.frame mapping  clusters meta-clusters; cells, data.frame mapping cells meta-clusters; occurrence, list meta-clusters, element data.frame show occurrence meta-cluster cells across clusters.","code":""},{"path":"/reference/ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Over Representation Analysis — ora","title":"Over Representation Analysis — ora","text":"representation analysis","code":""},{"path":"/reference/ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Over Representation Analysis — ora","text":"","code":"ora(wb, bb, gsl, p_adj_method = \"fdr\")"},{"path":"/reference/ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Over Representation Analysis — ora","text":"wb hits (white balls) bb elements (black balls) gsl named list sets p_adj_method p value adjustment method, see p.adjust.methods","code":""},{"path":"/reference/ora1gs.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypergeometric test on 1 feature set — ora1gs","title":"Hypergeometric test on 1 feature set — ora1gs","text":"Hypergeometric test 1 feature set","code":""},{"path":"/reference/ora1gs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypergeometric test on 1 feature set — ora1gs","text":"","code":"ora1gs(wb, bb, bd)"},{"path":"/reference/ora1gs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypergeometric test on 1 feature set — ora1gs","text":"wb white balls bb black balls bd balls drawn","code":""},{"path":"/reference/overlap_coefficient.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the overlap coefficient between two sets — overlap_coefficient","title":"Calculate the overlap coefficient between two sets — overlap_coefficient","text":"Calculate overlap coefficient two sets","code":""},{"path":"/reference/overlap_coefficient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the overlap coefficient between two sets — overlap_coefficient","text":"","code":"overlap_coefficient(x, y)"},{"path":"/reference/overlap_coefficient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the overlap coefficient between two sets — overlap_coefficient","text":"x vector items y vector items","code":""},{"path":"/reference/overlap_coefficient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the overlap coefficient between two sets — overlap_coefficient","text":"overlap coefficient","code":""},{"path":"/reference/overlap_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the overlap matrix between clusters — overlap_matrix","title":"Calculate the overlap matrix between clusters — overlap_matrix","text":"Calculate overlap coefficient n sets","code":""},{"path":"/reference/overlap_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the overlap matrix between clusters — overlap_matrix","text":"","code":"overlap_matrix(scMuffinList = NULL)"},{"path":"/reference/overlap_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the overlap matrix between clusters — overlap_matrix","text":"scMuffinList scMuffinList object","code":""},{"path":"/reference/overlap_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the overlap matrix between clusters — overlap_matrix","text":"scMuffinList scMuffinList$cluster_comparison$overlap_matrix","code":""},{"path":"/reference/partitions_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform partitions to lists — partitions_to_list","title":"Transform partitions to lists — partitions_to_list","text":"Clusterings list","code":""},{"path":"/reference/partitions_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform partitions to lists — partitions_to_list","text":"","code":"partitions_to_list(partitions)"},{"path":"/reference/partitions_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform partitions to lists — partitions_to_list","text":"partitions partitions object","code":""},{"path":"/reference/partitions_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform partitions to lists — partitions_to_list","text":"List partitions","code":""},{"path":"/reference/plot_diff_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot diffusion map colored by other features — plot_diff_map","title":"Plot diffusion map colored by other features — plot_diff_map","text":"Produce scatter plot cells placed according results diffusion map analysis colored values given col_data.","code":""},{"path":"/reference/plot_diff_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot diffusion map colored by other features — plot_diff_map","text":"","code":"plot_diff_map(   scMuffinList = NULL,   columns = c(1:2),   col_data = NULL,   file = NULL,   width = 200,   height = 200,   units = \"mm\",   res = 300,   adj_outliers = TRUE,   scale_feature = FALSE,   min_cells = 50,   ... )"},{"path":"/reference/plot_diff_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot diffusion map colored by other features — plot_diff_map","text":"scMuffinList scMuffinList object columns columns scMuffinList$diffusion_map_pseudo_t$summary used x y col_data named vector values translated colors. Names cell names. file File name save figure png file width image width height image height units image units res image resolution adj_outliers logical, whether adjust group.scores, removing outliers scale_feature logical, whether scale col_data min_cells minimum number cells feature must non-zero value ... arguments plot()","code":""},{"path":"/reference/plot_heatmap_dataset_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_heatmap_dataset_comparison — plot_heatmap_dataset_comparison","title":"plot_heatmap_dataset_comparison — plot_heatmap_dataset_comparison","text":"plot_heatmap_dataset_comparison","code":""},{"path":"/reference/plot_heatmap_dataset_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_heatmap_dataset_comparison — plot_heatmap_dataset_comparison","text":"","code":"plot_heatmap_dataset_comparison(   dataset_cmp_list = NULL,   type = \"score\",   show.gs.source = FALSE,   outfile = NULL,   width = 200,   height = 200,   units = \"mm\",   res = 300,   na_col = \"black\",   ... )"},{"path":"/reference/plot_heatmap_dataset_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_heatmap_dataset_comparison — plot_heatmap_dataset_comparison","text":"dataset_cmp_list list resulting inter_dataset_comparison() type \"score\" \"significance\" , respectively, cluster median marker set score -log10(FDRq) CSEA. show.gs.source whether show gene set source outfile File name save figure png file width image width height image height units image units res image res na_col color NA values ... arguments passed ComplexHeatmap::Heatmap","code":""},{"path":"/reference/plot_heatmap_features_by_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an heatmap of feature values in cell clusters — plot_heatmap_features_by_clusters","title":"Plot an heatmap of feature values in cell clusters — plot_heatmap_features_by_clusters","text":"Plot heatmap feature values cell clusters","code":""},{"path":"/reference/plot_heatmap_features_by_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an heatmap of feature values in cell clusters — plot_heatmap_features_by_clusters","text":"","code":"plot_heatmap_features_by_clusters(   scMuffinList = NULL,   feature_source = NULL,   partition_id = NULL,   significance_matrix = NULL,   sig_threshold = 0.05,   file = NULL,   width = 180,   height = 180,   units = \"mm\",   res = 300,   scale = FALSE,   pal = NULL,   na_col = \"black\",   X_abs_max = NULL,   ... )"},{"path":"/reference/plot_heatmap_features_by_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an heatmap of feature values in cell clusters — plot_heatmap_features_by_clusters","text":"scMuffinList scMuffinList object feature_source can \"mean\", \"gss\" numeric matrix (clusters--features). \"mean\", data.frame average feature values among clusters used (default); \"gene_set_scoring\", average gene set values among clusters used. partition_id identifier partition considered significance_matrix optional significance matrix (clusters--features) size data specified means feature_source sig_threshold significance threshold file File name save figure png file width image width height image height units image units res image resolution scale whether scale features pal color palette. Default rev(pals::brewer.rdylbu(10)) (negative values) pals::brewer.ylorrd(5)) (positive values) na_col color NA values X_abs_max maximum absolute value permitted, useful avoid effect outliers colors ... arguments ComplexHeatmap::Heatmap","code":""},{"path":"/reference/plot_meta_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot meta clusters — plot_meta_clusters","title":"Plot meta clusters — plot_meta_clusters","text":"Plot meta clusters","code":""},{"path":"/reference/plot_meta_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot meta clusters — plot_meta_clusters","text":"","code":"plot_meta_clusters(   ov_mat = NULL,   meta_clusters = NULL,   out_file = \"meta_clusters.jpg\",   ... )"},{"path":"/reference/plot_meta_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot meta clusters — plot_meta_clusters","text":"ov_mat overlap matrix meta_clusters meta clusters out_file output file ... arguments ComplexHeatmap::Heatmap","code":""},{"path":"/reference/plot_profile_CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Profile — plot_profile_CNV","title":"CNV Profile — plot_profile_CNV","text":"Plot heatmap CNV.","code":""},{"path":"/reference/plot_profile_CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Profile — plot_profile_CNV","text":"","code":"plot_profile_CNV(   scMuffinList = NULL,   cluster = 0,   z.score = TRUE,   file = NULL,   width = 300,   height = 90,   units = \"mm\",   res = 300,   cex.points = 0.7,   cex.lab = 0.7,   cex.axis = 0.7,   cex.main = 0.7 )"},{"path":"/reference/plot_profile_CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Profile — plot_profile_CNV","text":"scMuffinList scMuffinList object cluster cluster plotted z.score whether plot cluster median z-scores CNV profile (TRUE) cluster median CNV profile (FALSE). file File name save figure png file width image width height image height units image units res image resolution cex.points cex points cex.lab cex labs cex.axis cex axis cex.main cex main","code":""},{"path":"/reference/plot_profile_CNV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CNV Profile — plot_profile_CNV","text":"CNV Profile every cluster","code":""},{"path":"/reference/plot_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_umap — plot_umap","title":"plot_umap — plot_umap","text":"Generate UMAP visualization","code":""},{"path":"/reference/plot_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_umap — plot_umap","text":"","code":"plot_umap(   Seu_obj,   file = \"umap.jpg\",   labels = NULL,   group.by = NULL,   feature_plot = FALSE,   lab_size = 1,   lab_color = \"black\",   adj_outliers = FALSE,   width = 180,   height = 180,   units = \"mm\",   res = 300,   text.size = 5,   ... )"},{"path":"/reference/plot_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_umap — plot_umap","text":"Seu_obj seurat object, object saved dimension reduction components file string, file name output labels cluster labels group.feature colour (e.g. cluster ID) feature_plot whether call Seurat::FeaturePlot lab_size label size lab_color label color adj_outliers logical, whether adjust group.scores, removing outliers width image width height image height units image units res image resolution text.size text size ... arguments Seurat::FeaturePlot Seurat::DimPlot","code":""},{"path":"/reference/plot_umap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_umap — plot_umap","text":"Generate UMAP visualization","code":""},{"path":"/reference/plot_umap_colored_features.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP Visualization colored by features — plot_umap_colored_features","title":"UMAP Visualization colored by features — plot_umap_colored_features","text":"Generate UMAP visualizations columns \"summary\" element feature available scMuffinList. every column png file saved out_dir. requires Seurat object UMAP information.","code":""},{"path":"/reference/plot_umap_colored_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP Visualization colored by features — plot_umap_colored_features","text":"","code":"plot_umap_colored_features(   Seu_obj = NULL,   scMuffinList = NULL,   feature_name = NULL,   scale_feature = FALSE,   adj_outliers = FALSE,   min_cells = 10,   out_dir = \"./\",   width = 180,   height = 180,   units = \"mm\",   res = 300,   ... )"},{"path":"/reference/plot_umap_colored_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UMAP Visualization colored by features — plot_umap_colored_features","text":"Seu_obj Seurat object UMAP data scMuffinList scMuffinList object feature_name feature name scale_feature whether scale feature values adj_outliers logical, whether adjust feature scores, removing outliers min_cells minimum number cells feature must non-zero value out_dir output directory width image width height image height units image units res image resolution ... arguments plot_umap","code":""},{"path":"/reference/prepare_cluster_markers_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare cluster markers list\nPrepare cluster markers list for inter_dataset_comparison — prepare_cluster_markers_list","title":"Prepare cluster markers list\nPrepare cluster markers list for inter_dataset_comparison — prepare_cluster_markers_list","text":"Prepare cluster markers list Prepare cluster markers list inter_dataset_comparison","code":""},{"path":"/reference/prepare_cluster_markers_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare cluster markers list\nPrepare cluster markers list for inter_dataset_comparison — prepare_cluster_markers_list","text":"","code":"prepare_cluster_markers_list(   marker_table_list = NULL,   effect_size = \"avg_log2FC\",   effect_size_thr = 0.25,   sig_column = \"p_val_adj\",   sig_thr = 0.1,   id_column = \"gene\",   cluster = \"cluster\",   top = 500 )"},{"path":"/reference/prepare_cluster_markers_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare cluster markers list\nPrepare cluster markers list for inter_dataset_comparison — prepare_cluster_markers_list","text":"marker_table_list list marker tables, produced Seurat::FindAllMarkers effect_size name effect size column effect_size_thr threshold effect size sig_column column significance score sig_thr threshold effect significance score id_column column IDs cluster column cell cluster top maximum number markers per cluster","code":""},{"path":"/reference/prepare_gsls.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the gene set lists collected from various sources — prepare_gsls","title":"Prepare the gene set lists collected from various sources — prepare_gsls","text":"Prepare gene set lists collected various sources","code":""},{"path":"/reference/prepare_gsls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the gene set lists collected from various sources — prepare_gsls","text":"","code":"prepare_gsls(   gs_sources = NULL,   custom_gsls = NULL,   CM_tissues = NULL,   PNDB_tissues = NULL,   msigdb_hs_cat_subcat = NULL,   genes_min = 5,   genes_max = 500,   id_type = c(\"Symbol\", \"EntrezID\"),   scMuffinList = NULL,   genes = NULL )"},{"path":"/reference/prepare_gsls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the gene set lists collected from various sources — prepare_gsls","text":"gs_sources character vector, possible values: \"CM_cancer\", \"CM_normal\", \"CancerSEA\", \"PNDB\" \"msigdb\" custom_gsls named list gene sets CM_tissues character vector strings filter CellMArker db tissue name PNDB_tissues character vector strings filter Panglao db tissue name msigdb_hs_cat_subcat data.frame species, category subcategory: e.g. \"Homo sapiens\", \"NA\", \"CP:KEGG\" genes_min minimum number genes required gene set genes_max maximum number genes required gene set id_type type id: Symbol EntrezID scMuffinList scMuffinList object genes genes considered","code":""},{"path":"/reference/prepare_gsls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare the gene set lists collected from various sources — prepare_gsls","text":"lists gene set lists","code":""},{"path":"/reference/preprocess_for_heatmap_CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"preprocess_for_heatmap_CNV — preprocess_for_heatmap_CNV","title":"preprocess_for_heatmap_CNV — preprocess_for_heatmap_CNV","text":"Bind chromosomes together matrix.","code":""},{"path":"/reference/preprocess_for_heatmap_CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"preprocess_for_heatmap_CNV — preprocess_for_heatmap_CNV","text":"","code":"preprocess_for_heatmap_CNV(result_cnv = NULL)"},{"path":"/reference/preprocess_for_heatmap_CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"preprocess_for_heatmap_CNV — preprocess_for_heatmap_CNV","text":"result_cnv object resulting CNV analyiss","code":""},{"path":"/reference/preprocess_for_heatmap_CNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"preprocess_for_heatmap_CNV — preprocess_for_heatmap_CNV","text":"matrix used function heatmap_CNV.","code":""},{"path":"/reference/preprocess_object_for_CNV.html","id":null,"dir":"Reference","previous_headings":"","what":"preprocess_object_for_CNV — preprocess_object_for_CNV","title":"preprocess_object_for_CNV — preprocess_object_for_CNV","text":"Preprocessing function obtain genomically-ordered list chromosomes.","code":""},{"path":"/reference/preprocess_object_for_CNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"preprocess_object_for_CNV — preprocess_object_for_CNV","text":"","code":"preprocess_object_for_CNV(genes_by_cells = NULL, gene_ann = NULL)"},{"path":"/reference/preprocess_object_for_CNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"preprocess_object_for_CNV — preprocess_object_for_CNV","text":"genes_by_cells genes--cells input matrix gene_ann optional data.frame gene annotation mandatory columns \"Chromosome\", \"symbol\" \"pos\" (genomic location). NULL gene locations collected org.Hs.eg.db","code":""},{"path":"/reference/preprocess_object_for_CNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"preprocess_object_for_CNV — preprocess_object_for_CNV","text":"list genomically-ordered chromosomes","code":""},{"path":"/reference/preprocess_object_for_CNV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"preprocess_object_for_CNV — preprocess_object_for_CNV","text":"preliminary step consist annotation, duplicates NA values removal.  , matrix splitted list dataframe, every dataframe chromosome. Chromosomes ordered 1 22 + X +Y, re-ordered start position.","code":""},{"path":"/reference/process_GTEx_gene_reads.html","id":null,"dir":"Reference","previous_headings":"","what":"Process GTEx expression data — process_GTEx_gene_reads","title":"Process GTEx expression data — process_GTEx_gene_reads","text":"GTEx gene reads file processed obtain average normalized gene expression tissue","code":""},{"path":"/reference/process_GTEx_gene_reads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process GTEx expression data — process_GTEx_gene_reads","text":"","code":"process_GTEx_gene_reads(   geneReads = NULL,   GTEx_annot = NULL,   tissue = NULL,   id_type = c(\"gene_id\", \"symbol\"),   nrows = -1,   norm.type = \"LogNormalize\",   ... )"},{"path":"/reference/process_GTEx_gene_reads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process GTEx expression data — process_GTEx_gene_reads","text":"geneReads GTEx gene reads \"gct\" file, e.g. \"GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct\" GTEx_annot GTEx Sample annotation file, e.g. \"GTEx_Analysis_v8_Annotations_SampleAttributesDS.txt\" tissue tissue name, see param \"SMTS\" annotation id_type whether output specified gene_id symbol nrows limit read top nrows. Useful testing. norm.type Method normalization. See Seurat::NormalizeData. ... arguments passed functin Seurat::NormalizeData.","code":""},{"path":"/reference/process_GTEx_gene_reads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process GTEx expression data — process_GTEx_gene_reads","text":"average normalized gene expression values","code":""},{"path":"/reference/proliferation_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a proliferation score — proliferation_analysis","title":"Define a proliferation score — proliferation_analysis","text":"Define proliferation score basis G1/S G2/M markers (default gsls_Symbol$Tirosh)","code":""},{"path":"/reference/proliferation_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a proliferation score — proliferation_analysis","text":"","code":"proliferation_analysis(   scMuffinList = NULL,   mc.cores = 1,   nbins = 25,   nmark_min = 5,   ncells_min = 5,   k = 99,   kmin = 49,   score_type = c(\"relative\", \"mean\"),   null_model = TRUE,   mean_scale = TRUE,   gsl = NULL )"},{"path":"/reference/proliferation_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a proliferation score — proliferation_analysis","text":"scMuffinList scMuffinList object mc.cores number cores nbins number bins split distribution average gene expression nmark_min number minimum markers required succesful calculation signature ncells_min number minimum cells gene set succesfully calculated k number permutations kmin minimum number permutations; due missing values hard ensure signature can compared k permutations every cell score_type type score. \"relative\", score difference observed gene set average expression k permutations; \"mean\" score equal observed gene set average expression null_model TRUE permutations used. Required score_type=\"relative\" mean_scale whether scale values obtained using score_type=\"mean\" gsl list two gene sets 1/S G2/M markers. NULL gsls_Symbol$Tirosh used. See gsls_Symbol$Tirosh properly format custom gene sets.","code":""},{"path":"/reference/proliferation_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a proliferation score — proliferation_analysis","text":"scMuffinList element \"proliferation\", list : summary: data.frame proliferation value full: data.frame vales two considered gene sets","code":""},{"path":"/reference/regions_to_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map between CNV regions and genes — regions_to_genes","title":"Create a map between CNV regions and genes — regions_to_genes","text":"Create map CNV regions genes","code":""},{"path":"/reference/regions_to_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map between CNV regions and genes — regions_to_genes","text":"","code":"regions_to_genes(CNV = NULL, CNV_input = NULL)"},{"path":"/reference/regions_to_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map between CNV regions and genes — regions_to_genes","text":"CNV CNV matrix CNV_input CNV_input","code":""},{"path":"/reference/scML_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"scML_demo\nscMuffinList object with a partial dataset used in vignettes. — scML_demo","title":"scML_demo\nscMuffinList object with a partial dataset used in vignettes. — scML_demo","text":"scML_demo scMuffinList object partial dataset used vignettes.","code":""},{"path":"/reference/scML_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scML_demo\nscMuffinList object with a partial dataset used in vignettes. — scML_demo","text":"","code":"scML_demo"},{"path":"/reference/scML_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"scML_demo\nscMuffinList object with a partial dataset used in vignettes. — scML_demo","text":"object class list length 9.","code":""},{"path":"/reference/scMuffinList_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"scMuffinList_demo\nscMuffinList object with a partial dataset used in vignettes. — scMuffinList_demo","title":"scMuffinList_demo\nscMuffinList object with a partial dataset used in vignettes. — scMuffinList_demo","text":"scMuffinList_demo scMuffinList object partial dataset used vignettes.","code":""},{"path":"/reference/scMuffinList_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scMuffinList_demo\nscMuffinList object with a partial dataset used in vignettes. — scMuffinList_demo","text":"","code":"scMuffinList_demo"},{"path":"/reference/scMuffinList_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"scMuffinList_demo\nscMuffinList object with a partial dataset used in vignettes. — scMuffinList_demo","text":"object class list length 11.","code":""},{"path":"/reference/sc_create_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Create empirical null for gene set scoring — sc_create_null","title":"Create empirical null for gene set scoring — sc_create_null","text":"sc_create_null","code":""},{"path":"/reference/sc_create_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create empirical null for gene set scoring — sc_create_null","text":"","code":"sc_create_null(genes_by_cells = NULL, bins = NULL, gene_set = NULL, k = 100)"},{"path":"/reference/sc_create_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create empirical null for gene set scoring — sc_create_null","text":"genes_by_cells genes--cells matrix bins bins genes, created means sc_data_bin gene_set vector genes k number permutations","code":""},{"path":"/reference/sc_create_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create empirical null for gene set scoring — sc_create_null","text":"list null gene sets.","code":""},{"path":"/reference/sc_data_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the genes into bins by their expression — sc_data_bin","title":"Split the genes into bins by their expression — sc_data_bin","text":"Split input data matrix rows nbins","code":""},{"path":"/reference/sc_data_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the genes into bins by their expression — sc_data_bin","text":"","code":"sc_data_bin(genes_by_cells = NULL, nbins = 25, na.rm = FALSE)"},{"path":"/reference/sc_data_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the genes into bins by their expression — sc_data_bin","text":"genes_by_cells genes--cells matrix nbins number bins na.rm TRUE, cells null (0) values considered calculation gene expression level.","code":""},{"path":"/reference/sc_data_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the genes into bins by their expression — sc_data_bin","text":"vector bin identifier gene","code":""},{"path":"/reference/show_tissues.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the tissues available for prepare_gsls — show_tissues","title":"Show the tissues available for prepare_gsls — show_tissues","text":"Show tissues available means prepare_gsls","code":""},{"path":"/reference/show_tissues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the tissues available for prepare_gsls — show_tissues","text":"","code":"show_tissues(gsc_source = c(\"PNDB\", \"CM_normal\", \"CM_cancer\"))"},{"path":"/reference/show_tissues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the tissues available for prepare_gsls — show_tissues","text":"gsc_source source database","code":""},{"path":"/reference/show_tissues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the tissues available for prepare_gsls — show_tissues","text":"List gsc_source tissue vectors.","code":""},{"path":"/reference/transcr_compl.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcriptional Complexity and Entropy — transcr_compl","title":"Transcriptional Complexity and Entropy — transcr_compl","text":"Transcriptional Complexity Entropy","code":""},{"path":"/reference/transcr_compl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcriptional Complexity and Entropy — transcr_compl","text":"","code":"transcr_compl(   scMuffinList = NULL,   min_counts = 5,   min_cells = 10,   min_genes = 500 )"},{"path":"/reference/transcr_compl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcriptional Complexity and Entropy — transcr_compl","text":"scMuffinList scMuffinList object min_counts minimum number counts min_cells minimum number cells gene must least min_counts counts min_genes minimum number genes cell must express least min_counts counts","code":""},{"path":"/reference/transcr_compl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcriptional Complexity and Entropy — transcr_compl","text":"scMuffinList transcr_compl element list summary (full empty): tot_counts, total number transcripts; n_genes, total number expressed genes; C, transcriptional complexity; H, transcriptional entropy;","code":""}]
